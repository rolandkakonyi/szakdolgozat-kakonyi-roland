<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!-- saved from url=(0049)http://www.php.net/manual/en/function.fputcsv.php -->
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en"><head profile="http://purl.org/NET/erdf/profile"><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <title>PHP: fputcsv - Manual</title>
 <style type="text/css" media="all">
  @import url("http://static.php.net/www.php.net/styles/site.css");
  @import url("http://static.php.net/www.php.net/styles/phpnet.css");
  
 </style>
 <!--[if IE]><![if gte IE 6]><![endif]-->
  <style type="text/css" media="print">
   @import url("http://static.php.net/www.php.net/styles/print.css");
  </style>
 <!--[if IE]><![endif]><![endif]-->
 
 <link rel="shortcut icon" href="http://static.php.net/www.php.net/favicon.ico">
 <link rel="contents" href="http://www.php.net/manual/en/index.php">
 <link rel="index" href="http://www.php.net/manual/en/ref.filesystem.php">
 <link rel="prev" href="http://www.php.net/manual/en/function.fpassthru.php">
 <link rel="next" href="http://www.php.net/manual/en/function.fputs.php">
 <link rel="schema.dc" href="http://purl.org/dc/elements/1.1/">
 <link rel="schema.rdfs" href="http://www.w3.org/2000/01/rdf-schema#">
 <link rev="canonical" rel="self alternate shorter shorturl shortlink" href="http://php.net/fputcsv">
 <link rel="license" href="http://creativecommons.org/licenses/by/3.0/" about="#content">
 <link rel="canonical" href="http://php.net/manual/en/function.fputcsv.php">
 <script type="text/javascript" src="./PHP  fputcsv - Manual_files/userprefs.js"></script>
 <!--<base href="http://www.php.net/manual/en/function.fputcsv.php">--><base href=".">
 <meta http-equiv="Content-language" content="en">
            <script type="text/javascript" src="./PHP  fputcsv - Manual_files/jquery.min.js"></script>
            <script type="text/javascript" src="./PHP  fputcsv - Manual_files/jquery-ui.min.js"></script>
<script type="text/javascript">
$(document).ready(function() {
    var toggleImage = function(elem) {
        if ($(elem).hasClass("shown")) {
            $(elem).removeClass("shown").addClass("hidden");
            $("img", elem).attr("src", "/images/notes-add.gif");
        }
        else {
            $(elem).removeClass("hidden").addClass("shown");
            $("img", elem).attr("src", "/images/notes-reject.gif");
        }
    };

    $(".refsect1 h3.title").each(function() {
        url = "https://bugs.php.net/report.php?bug_type=Documentation+problem&amp;manpage=" + $(this).parent().parent().attr("id") + "%23" + $(this).parent().attr("id");
        $(this).parent().prepend("<div class='reportbug'><a href='" + url + "'>Report a bug</a></div>");
        $(this).prepend("<a class='toggler shown' href='#'><img src='/images/notes-reject.gif' alt='reject note' /></a> ");
    });
    $("#usernotes .head").each(function() {
        $(this).prepend("<a class='toggler shown' href='#'><img src='/images/notes-reject.gif' alt='reject note' /></a> ");
    });
    $(".refsect1 h3.title .toggler").click(function() {
        $(this).parent().siblings().slideToggle("slow");
        toggleImage(this);
        return false;
    });
    $("#usernotes .head .toggler").click(function() {
        $(this).parent().next().slideToggle("slow");
        toggleImage(this);
        return false;
    });
});
</script>

</head><style>#A9AdsMiddleBoxTop, #A9AdsOutOfStockWidgetTop, #A9AdsServicesWidgetTop, #ADNETwallBanner1, #ADNETwallBanner2, #ADSLOT_1, #ADSLOT_2, #ADSLOT_3, #ADSLOT_4, #ADSLOT_SKYSCRAPER, #ADVERTISE_HERE_ROW, #AD_CONTROL_22, #AD_CONTROL_28, #AD_CONTROL_29, #AD_CONTROL_8, #AD_ROW, #AD_Top, #AD_newsblock, #ADgoogle_newsblock, #ADsmallWrapper { display: none !important; } #Ad160x600, #Ad300x250, #Ad3Left, #Ad3Right, #Ad3TextAd, #AdArea, #AdBanner_F1, #AdBar, #AdBar1, #AdBox2, #AdContainer, #AdContainerTop, #AdContentModule_F, #AdDetails_GoogleLinksBottom, #AdDetails_InsureWith, #AdFrame4, #AdHeader, #AdLeaderboardBottom, #AdLeaderboardTop, #AdMiddle { display: none !important; } #AdMobileLink, #AdPopUp, #AdRectangle, #AdSenseDiv, #AdSenseResults1_adSenseSponsorDiv, #AdServer, #AdShowcase_F1, #AdSky23, #AdSkyscraper, #AdSpacing, #AdSponsor_SF, #AdSubsectionShowcase_F1, #AdTargetControl1_iframe, #AdTop, #AdTopLeader, #Ad_BelowContent, #Ad_Block, #Ad_Center1, #Ad_Right1, #Ad_RightBottom { display: none !important; } #Ad_RightTop, #Ad_Top, #Adbanner, #Adrectangle, #AdsContent, #AdsRight, #AdsWrap, #Ads_BA_CAD, #Ads_BA_CAD2, #Ads_BA_CAD_box, #Ads_BA_SKY, #Ads_CAD, #Ads_OV_BS, #Ads_Special, #AdvertMPU23b, #AdvertPanel, #AdvertiseFrame, #Advertisement, #Advertisements, #Advertorial { display: none !important; } #Advertorials, #AdvertsBottom, #AdvertsBottomR, #BANNER_160x600, #BANNER_300x250, #BANNER_728x90, #BannerAd, #BannerAdvert, #BigBoxAd, #BodyAd, #BotAd, #Bottom468x60AD, #ButtonAd, #ClickPop_LayerPop_Container, #CompanyDetailsNarrowGoogleAdsPresentationControl, #CompanyDetailsWideGoogleAdsPresentationControl, #ContentAd, #ContentAd1, #ContentAd2, #ContentAdPlaceHolder1 { display: none !important; } #ContentAdPlaceHolder2, #ContentAdXXL, #ContentPolepositionAds_Result, #CornerAd, #DartAd300x250, #DivAdEggHeadCafeTopBanner, #FIN_videoplayer_300x250ad, #FooterAd, #FooterAdContainer, #GOOGLE_ADS_47, #GoogleAd1, #GoogleAd2, #GoogleAd3, #GoogleAdsPlaceHolder, #GoogleAdsPresentationControl, #GoogleAdsense, #Google_Adsense_Main, #HEADERAD, #HOME_TOP_RIGHT_BOXAD, #HeaderAD { display: none !important; } #HeaderAdsBlock, #HeaderAdsBlockFront, #HeaderBannerAdSpacer, #HeaderTextAd, #HeroAd, #HomeAd1, #Home_AdSpan, #HouseAd, #ID_Ad_Sky, #JobsearchResultsAds, #Journal_Ad_125, #Journal_Ad_300, #JuxtapozAds, #KH-contentAd, #LargeRectangleAd, #LeftAd, #LeftAd1, #LeftAdF1, #LeftAdF2, #LftAd { display: none !important; } #LoungeAdsDiv, #LowerContentAd, #MPUAdSpace, #MainSponsoredLinks, #Meebo\:AdElement\.Root, #Nightly_adContainer, #NormalAdModule, #OpenXAds, #OverrideAdArea, #PREFOOTER_LEFT_BOXAD, #PREFOOTER_RIGHT_BOXAD, #PageLeaderAd, #PreRollAd, #RelevantAds, #RgtAd1, #RightAd, #RightBottom300x250AD, #RightNavTopAdSpot, #RightSponsoredAd, #SectionAd300-250 { display: none !important; } #SectionSponsorAd, #SideAdMpu, #SidebarAdContainer, #SkyAd, #SpecialAds, #SponsoredAd, #SponsoredLinks, #TL_footer_advertisement, #TOP_ADROW, #TOP_RIGHT_BOXAD, #Tadspacefoot, #Tadspacehead, #Tadspacemrec, #TextLinkAds, #ThreadAd, #Top468x60AD, #TopAd, #TopAdBox, #TopAdContainer, #TopAdDiv { display: none !important; } #TopAdPos, #TopBannerAd, #VM-MPU-adspace, #VM-footer-adspace, #VM-header-adspace, #VM-header-adwrap, #XEadLeaderboard, #XEadSkyscraper, #YahooAdParentContainer, #_ads, #abHeaderAdStreamer, #about_adsbottom, #abovepostads, #ad-1000x90-1, #ad-120x600-sidebar, #ad-120x60Div, #ad-160x600, #ad-160x600-sidebar, #ad-250, #ad-250x300 { display: none !important; } #ad-300, #ad-300x250, #ad-300x250-1, #ad-300x250-sidebar, #ad-300x250Div, #ad-300x60-1, #ad-376x280, #ad-728, #ad-728x90, #ad-728x90-1, #ad-728x90-leaderboard-top, #ad-728x90-top0, #ad-ads, #ad-article, #ad-banner, #ad-banner-1, #ad-bigbox, #ad-billboard-bottom, #ad-block-125, #ad-bottom { display: none !important; } #ad-bottom-wrapper, #ad-box, #ad-box-first, #ad-box-second, #ad-boxes, #ad-bs, #ad-buttons, #ad-colB-1, #ad-column, #ad-container, #ad-content, #ad-contentad, #ad-first-post, #ad-flex-first, #ad-footer, #ad-footprint-160x600, #ad-frame, #ad-front-footer, #ad-front-sponsoredlinks, #ad-fullbanner2 { display: none !important; } #ad-globalleaderboard, #ad-halfpage, #ad-header, #ad-header-728x90, #ad-horizontal-header, #ad-img, #ad-inner, #ad-label, #ad-leaderboard, #ad-leaderboard-1-container, #ad-leaderboard-bottom, #ad-leaderboard-container, #ad-leaderboard-spot, #ad-leaderboard-top, #ad-left, #ad-left-sidebar-ad-1, #ad-left-sidebar-ad-2, #ad-left-sidebar-ad-3, #ad-links-content, #ad-list-row { display: none !important; } #ad-lrec, #ad-medium, #ad-medium-rectangle, #ad-medrec, #ad-middlethree, #ad-middletwo, #ad-module, #ad-mpu, #ad-mpu1-spot, #ad-mpu2, #ad-mpu2-spot, #ad-north, #ad-one, #ad-placard, #ad-placeholder, #ad-rectangle, #ad-right, #ad-right-sidebar-ad-1, #ad-right-sidebar-ad-2, #ad-righttop { display: none !important; } #ad-row, #ad-side, #ad-side-text, #ad-sidebar, #ad-sky, #ad-skyscraper, #ad-slot-right, #ad-slug-wrapper, #ad-small-banner, #ad-space, #ad-special, #ad-splash, #ad-sponsors, #ad-spot, #ad-squares, #ad-story-bottom-out, #ad-story-right, #ad-tail-placeholder, #ad-target, #ad-target-Leaderbord { display: none !important; } #ad-teaser, #ad-text, #ad-top, #ad-top-banner, #ad-top-text-low, #ad-top-wrap, #ad-tower, #ad-trailerboard-spot, #ad-two, #ad-typ1, #ad-unit, #ad-wrap, #ad-wrap-right, #ad-wrapper, #ad-wrapper1, #ad-yahoo-simple, #ad-zone-1, #ad-zone-2, #ad-zone-inline, #ad001 { display: none !important; } #ad01, #ad02, #ad1006, #ad11, #ad125BL, #ad125BR, #ad125TL, #ad125TR, #ad125x125, #ad160x600, #ad160x600right, #ad1Sp, #ad2Sp, #ad300, #ad300-250, #ad300X250, #ad300_x_250, #ad300x100Middle, #ad300x150, #ad300x250 { display: none !important; } #ad300x250Module, #ad300x60, #ad300x600, #ad300x600_callout, #ad336, #ad336x280, #ad375x85, #ad468, #ad468x60, #ad468x60_top, #ad526x250, #ad600, #ad728, #ad728Mid, #ad728Top, #ad728Wrapper, #ad728top, #ad728x90, #ad728x90_1, #ad90 { display: none !important; } #adBadges, #adBanner, #adBanner10, #adBanner120x600, #adBanner160x600, #adBanner2, #adBanner3, #adBanner336x280, #adBanner4, #adBanner728, #adBanner9, #adBannerTable, #adBannerTop, #adBar, #adBelt, #adBlock125, #adBlockTop, #adBlocks, #adBottbanner, #adBox { display: none !important; } #adBox11, #adBox16, #adBox350, #adBox390, #adCirc300X200, #adCirc_620_100, #adCol, #adColumn, #adCompanionSubstitute, #adComponentWrapper, #adContainer, #adContainer_1, #adContainer_2, #adContainer_3, #adDiv, #adDiv300, #adDiv728, #adFiller, #adFps, #adFtofrs { display: none !important; } #adGallery, #adGoogleText, #adGroup1, #adHeader, #adHeaderTop, #adIsland, #adLB, #adLabel, #adLayer, #adLeader, #adLeaderTop, #adLeaderboard, #adMPU, #adMediumRectangle, #adMeld, #adMiddle0Frontpage, #adMiniPremiere, #adMonster1, #adOuter, #adPlaceHolderRight { display: none !important; } #adPlacer, #adPosOne, #adRight, #adRight2, #adSPLITCOLUMNTOPRIGHT, #adSenseModule, #adSenseWrapper, #adServer_marginal, #adShortTower, #adSidebar, #adSidebarSq, #adSky, #adSkyscraper, #adSlider, #adSlot01, #adSlot02, #adSpace, #adSpace0, #adSpace1, #adSpace10 { display: none !important; } #adSpace11, #adSpace12, #adSpace13, #adSpace14, #adSpace15, #adSpace16, #adSpace17, #adSpace18, #adSpace19, #adSpace2, #adSpace20, #adSpace21, #adSpace22, #adSpace23, #adSpace24, #adSpace25, #adSpace3, #adSpace300_ifrMain, #adSpace4, #adSpace5 { display: none !important; } #adSpace6, #adSpace7, #adSpace8, #adSpace9, #adSpace_footer, #adSpace_right, #adSpace_top, #adSpacer, #adSpecial, #adSplotlightEm, #adSpot-Leader, #adSpot-banner, #adSpot-island, #adSpot-mrec1, #adSpot-sponsoredlinks, #adSpot-textbox1, #adSpot-widestrip, #adSpotAdvertorial, #adSpotIsland, #adSpotSponsoredLinks { display: none !important; } #adSquare, #adStaticA, #adStrip, #adSuperAd, #adSuperPremiere, #adSuperSkyscraper, #adSuperbanner, #adTableCell, #adTag1, #adTag2, #adText, #adTextCustom, #adTextLink, #adText_container, #adTile, #adTop, #adTop1, #adTopContent, #adTopbanner, #adTopboxright { display: none !important; } #adTower, #adUnit, #adWrapper, #adZoneTop, #ad_1, #ad_130x250_inhouse, #ad_160x160, #ad_160x600, #ad_190x90, #ad_2, #ad_3, #ad_300, #ad_300_250, #ad_300_250_1, #ad_300a, #ad_300b, #ad_300c, #ad_300x100_m_c, #ad_300x250, #ad_300x250_content_column { display: none !important; } #ad_300x250_m_c, #ad_300x250m, #ad_300x90, #ad_4, #ad_468_60, #ad_468x60, #ad_5, #ad_728_foot, #ad_728x90, #ad_728x90_container, #ad_940, #ad_984, #ad_A, #ad_B, #ad_Banner, #ad_C, #ad_C2, #ad_D, #ad_E, #ad_F { display: none !important; } #ad_G, #ad_H, #ad_I, #ad_J, #ad_K, #ad_L, #ad_M, #ad_N, #ad_O, #ad_P, #ad_YieldManager-300x250, #ad_YieldManager-728x90, #ad_adsense, #ad_after_navbar, #ad_anchor, #ad_area, #ad_banner, #ad_bannerManage_1, #ad_banner_top, #ad_banners { display: none !important; } #ad_bar, #ad_bellow_post, #ad_bigsize_wrapper, #ad_block_1, #ad_block_2, #ad_bottom, #ad_box, #ad_box_colspan, #ad_box_top, #ad_branding, #ad_bs_area, #ad_buttons, #ad_center_monster, #ad_circ300x250, #ad_cna2, #ad_cont, #ad_container, #ad_container_0, #ad_container_marginal, #ad_container_side { display: none !important; } #ad_container_sidebar, #ad_container_top, #ad_content_top, #ad_content_wrap, #ad_feature, #ad_firstpost, #ad_footer, #ad_frame, #ad_front_three, #ad_fullbanner, #ad_gallery, #ad_global_header, #ad_h3, #ad_haha_1, #ad_haha_4, #ad_halfpage, #ad_head, #ad_header, #ad_holder, #ad_horizontal { display: none !important; } #ad_horseshoe_left, #ad_horseshoe_right, #ad_horseshoe_spacer, #ad_horseshoe_top, #ad_hotpots, #ad_in_arti, #ad_island, #ad_label, #ad_large_rectangular, #ad_lastpost, #ad_layer, #ad_layer2, #ad_leader, #ad_leaderBoard, #ad_leaderboard, #ad_leaderboard728x90, #ad_leaderboard_top, #ad_left, #ad_lnk, #ad_lrec { display: none !important; } #ad_lwr_square, #ad_main, #ad_medium_rectangle, #ad_medium_rectangular, #ad_mediumrectangle, #ad_menu_header, #ad_message, #ad_middle, #ad_most_pop_234x60_req_wrapper, #ad_mpu, #ad_mpu300x250, #ad_mpuav, #ad_mrcontent, #ad_newsletter, #ad_overlay, #ad_place, #ad_play_300, #ad_rect, #ad_rect_body, #ad_rect_bottom { display: none !important; } #ad_rectangle, #ad_rectangle_medium, #ad_related_links_div, #ad_related_links_div_program, #ad_replace_div_0, #ad_replace_div_1, #ad_report_leaderboard, #ad_report_rectangle, #ad_results, #ad_right, #ad_right_main, #ad_ros_tower, #ad_rr_1, #ad_script_head, #ad_sec, #ad_sec_div, #ad_sgd, #ad_sidebar, #ad_sidebar1, #ad_sidebar2 { display: none !important; } #ad_sidebar3, #ad_sky, #ad_skyscraper, #ad_skyscraper160x600, #ad_skyscraper_text, #ad_slot_leaderboard, #ad_slot_livesky, #ad_slot_sky_top, #ad_space, #ad_square, #ad_ss, #ad_table, #ad_term_bottom_place, #ad_text:not(textarea), #ad_thread_first_post_content, #ad_top, #ad_top_holder, #ad_tp_banner_1, #ad_tp_banner_2, #ad_txt { display: none !important; } #ad_unit, #ad_vertical, #ad_wide, #ad_wide_box, #ad_widget, #ad_window, #ad_wrap, #ad_wrapper, #adaptvcompanion, #adbForum, #adbanner, #adbar, #adbig, #adbnr, #adboard, #adbody, #adbottom, #adbox, #adbox1, #adbox2 { display: none !important; } #adbutton, #adclear, #adcode, #adcode1, #adcode2, #adcode3, #adcode4, #adcolumnwrapper, #adcontainer, #adcontainer1, #adcontainerRight, #adcontainsm, #adcontent, #adcontent1, #adcontrolPushSite, #add_ciao2, #addbottomleft, #addiv-bottom, #addiv-top, #adfooter { display: none !important; } #adfooter_728x90, #adframe:not(frameset), #adhead, #adhead_g, #adheader, #adhome, #adiframe1_iframe, #adiframe2_iframe, #adiframe3_iframe, #adimg, #adition_content_ad, #adlabel, #adlabelFooter, #adlayer, #adlayerContainer, #adlayer_back, #adlayerad, #adleaderboard, #adleaderboard_flex, #adleaderboardb { display: none !important; } #adleaderboardb_flex, #adleft, #adlinks, #adlinkws, #adlrec, #admanager_leaderboard, #admid, #admiddle3center, #admiddle3left, #adposition, #adposition-C, #adposition-FPMM, #adposition1, #adposition2, #adposition3, #adposition4, #adrectangle, #adrectanglea, #adrectanglea_flex, #adrectangleb { display: none !important; } #adrectangleb_flex, #adrig, #adright, #adright2, #adrighthome, #ads-250, #ads-468, #ads-5, #ads-area, #ads-block, #ads-bot, #ads-bottom, #ads-col, #ads-dell, #ads-footer, #ads-footer-inner, #ads-horizontal, #ads-indextext, #ads-leaderboard1, #ads-lrec { display: none !important; } #ads-main, #ads-menu, #ads-middle, #ads-prices, #ads-rhs, #ads-right, #ads-sponsored-boxes, #ads-top, #ads-vers7, #ads-wrapper, #ads120, #ads125, #ads160left, #ads300, #ads300-250, #ads300Bottom, #ads300Top, #ads315, #ads336x280, #ads728 { display: none !important; } #ads728bottom, #ads728top, #ads790, #adsBox-460_left, #adsBox-dynamic-right, #adsBoxResultsPage, #adsContent, #adsDisplay, #adsDiv1, #adsDiv2, #adsDiv3, #adsDiv4, #adsDiv5, #adsDiv6, #adsDiv7, #adsHeader, #adsID, #ads_01, #ads_160, #ads_300 { display: none !important; } #ads_728, #ads_banner, #ads_belowforumlist, #ads_belownav, #ads_bottom, #ads_bottom_inner, #ads_bottom_outer, #ads_box, #ads_button, #ads_catDiv, #ads_container, #ads_footer, #ads_fullsize, #ads_halfsize, #ads_header, #ads_html1, #ads_html2, #ads_inner, #ads_lb, #ads_medrect { display: none !important; } #ads_notice, #ads_right, #ads_right_sidebar, #ads_sidebar_roadblock, #ads_space, #ads_text, #ads_textlinks, #ads_top, #ads_topbanner, #ads_watch_top_square, #ads_zone27, #adsbottom, #adsbox, #adsbox-left, #adsbox-right, #adscolumn, #adsd_contentad_r1, #adsd_contentad_r2, #adsd_contentad_r3, #adsd_topbanner { display: none !important; } #adsd_txt_sky, #adsdiv, #adsection, #adsense, #adsense-2, #adsense-bottom, #adsense-header, #adsense-new, #adsense-tag, #adsense-text, #adsense03, #adsense04, #adsense05, #adsense1, #adsenseLeft, #adsenseOne, #adsenseWrap, #adsense_article_left, #adsense_block, #adsense_box { display: none !important; } #adsense_box_video, #adsense_inline, #adsense_leaderboard, #adsense_overlay, #adsense_placeholder_2, #adsenseheader, #adsensetopplay, #adsensewidget-3, #adserv, #adshometop, #adsimage, #adskinlink, #adsky, #adskyscraper, #adslider, #adslot, #adsmiddle, #adsonar, #adspace, #adspace-1 { display: none !important; } #adspace-300x250, #adspace-leaderboard-top, #adspace300x250, #adspaceBox, #adspaceBox300, #adspace_header, #adspace_leaderboard, #adspacer, #adsponsorImg, #adspot, #adspot-1, #adspot-149x170, #adspot-1x4, #adspot-2, #adspot-295x60, #adspot-2a, #adspot-2b, #adspot-300x110-pos-1, #adspot-300x125, #adspot-300x250-pos-1 { display: none !important; } #adspot-300x250-pos-2, #adspot-468x60-pos-2, #adspot-a, #adspot300x250, #adspot_220x90, #adspot_300x250, #adspot_468x60, #adspot_728x90, #adsquare, #adsright, #adstop, #adtab, #adtag_right_side, #adtagfooter, #adtagheader, #adtagrightcol, #adtaily-widget-light, #adtech_0, #adtech_1, #adtech_2 { display: none !important; } #adtech_3, #adtech_googleslot_03c, #adtech_takeover, #adtext, #adtop, #adtophp, #adtxt, #adv-300, #adv-leaderboard, #adv-left, #adv-masthead, #adv-middle, #adv-mpux, #adv-x36, #adv-x37, #adv-x38, #adv-x39, #adv-x40, #adv300bottom, #adv300top { display: none !important; } #adv728, #adv_300, #adv_728, #adv_border, #adv_google_300, #adv_google_728, #adv_halfpage, #adv_halfpage_title, #adv_leaderboard, #adv_sky, #adv_top_banner_wrapper, #adver1, #adver2, #adver3, #adver4, #adver5, #adver6, #adver7, #advert-1, #advert-120 { display: none !important; } #advert-boomer, #advert-display, #advert-header, #advert-leaderboard, #advert-links-bottom, #advert-skyscraper, #advert-top, #advert1, #advertBanner, #advertContainer, #advertDB, #advertRight, #advertSection, #advert_125x125, #advert_250x250, #advert_box, #advert_home01, #advert_leaderboard, #advert_lrec_format, #advert_mid { display: none !important; } #advert_mpu, #advert_mpu_1, #advert_right_skyscraper, #advert_sky, #advertbox, #advertbox2, #advertbox3, #advertbox4, #adverthome, #advertise, #advertise-here, #advertise-here-sidebar, #advertise-now, #advertise1, #advertiseHere, #advertisement1, #advertisement160x600, #advertisement3, #advertisement728x90, #advertisementHorizontal { display: none !important; } #advertisementLigatus, #advertisementPrio2, #advertisementRight, #advertisementRightcolumn0, #advertisementRightcolumn1, #advertisementsarticle, #advertiser-container, #advertiserLinks, #advertisers, #advertising, #advertising-banner, #advertising-caption, #advertising-container, #advertising-control, #advertising-skyscraper, #advertising-top, #advertising2, #advertisingModule160x600, #advertisingModule728x90, #advertisingTopWrapper { display: none !important; } #advertising_btm, #advertising_contentad, #advertising_horiz_cont, #advertisment, #advertismentElementInUniversalbox, #advertorial, #advertorial-wrap, #advertorial_red_listblock, #adverts, #adverts-top-container, #adverts-top-left, #adverts-top-middle, #adverts-top-right, #advertsingle, #advertspace, #advheader, #advsingle, #advt, #advtext, #advtop { display: none !important; } #adwhitepaperwidget, #adwin_rec, #adwith, #adwords-4-container, #adwrapper, #adxBigAd, #adxMiddle5, #adxSponLink, #adxSponLinkA, #adxtop, #adxtop2, #adzbanner, #adzerk, #adzerk1, #adzerk2, #adzone, #adzoneBANNER, #adzoneheader, #afc-container, #affinityBannerAd { display: none !important; } #after-content-ads, #after-header-ad-left, #after-header-ad-right, #after-header-ads, #agi-ad300x250, #agi-ad300x250overlay, #agi-sponsored, #alert_ads, #anchorAd, #annoying_ad, #ap_adframe, #ap_cu_overlay, #ap_cu_wrapper, #apiBackgroundAd, #apiTopAdWrap, #apmNADiv, #apolload, #araHealthSponsorAd, #area-adcenter, #area1ads { display: none !important; } #article-ad, #article-ad-container, #article-box-ad, #article-promo, #articleAdReplacement, #articleLeftAdColumn, #articleSideAd, #article_ad, #article_ad_container, #article_box_ad, #articlead1, #articlead2, #asideads, #asinglead, #atlasAdDivGame, #awds-nt1-ad, #babAdTop, #backad, #banner-300x250, #banner-ad { display: none !important; } #banner-ad-container, #banner-ads, #banner250x250, #banner300x250, #banner468x60, #banner728x90, #bannerAd, #bannerAdTop, #bannerAdWrapper, #bannerAd_ctr, #bannerAd_rdr, #banner_160x600, #banner_300_250, #banner_ad, #banner_ad_footer, #banner_ad_module, #banner_admicro, #banner_ads, #banner_advertisement, #banner_content_ad { display: none !important; } #banner_topad, #bannerad, #bannerad2, #baseAdvertising, #basket-adContainer, #bbccom_mpu, #bbo_ad1, #bg-footer-ads, #bg-footer-ads2, #bg_YieldManager-160x600, #bg_YieldManager-300x250, #bg_YieldManager-728x90, #bigAd, #bigBoxAd, #bigad300outer, #bigadbox, #bigadframe, #bigadspot, #billboard_ad, #block-ad_cube-1 { display: none !important; } #block-openads-0, #block-openads-1, #block-openads-2, #block-openads-3, #block-openads-4, #block-openads-5, #block-spti_ga-spti_ga_adwords, #block-thewrap_ads_250x300-0, #block_advert, #block_advertisement, #blog-ad, #blog_ad_content, #blog_ad_opa, #blog_ad_right, #blog_ad_top, #blox-big-ad, #blox-big-ad-bottom, #blox-big-ad-top, #blox-halfpage-ad, #blox-tile-ad { display: none !important; } #blox-tower-ad, #body_728_ad, #book-ad, #botad, #bott_ad2, #bott_ad2_300, #bottom-ad, #bottom-ad-container, #bottom-ad-tray, #bottom-ad-wrapper, #bottom-ads, #bottomAd, #bottomAdCCBucket, #bottomAdContainer, #bottomAdSense, #bottomAdSenseDiv, #bottomAds, #bottomAdvBox, #bottomContentAd, #bottomRightAd { display: none !important; } #bottomRightAdSpace, #bottom_ad, #bottom_ad_area, #bottom_ad_unit, #bottom_ads, #bottom_banner_ad, #bottom_overture, #bottom_sponsor_ads, #bottom_sponsored_links, #bottom_text_ad, #bottomad, #bottomadholder, #bottomads, #bottomadsense, #bottomadwrapper, #bottomleaderboardad, #box-ad-section, #box-ads-small-1, #box-ads-small-2, #box-content-ad { display: none !important; } #box-googleadsense-1, #box-googleadsense-r, #box1ad, #boxAd300, #boxAdContainer, #boxAdvert, #box_ad, #box_advertisment, #box_mod_googleadsense, #boxad1, #boxad2, #boxad3, #boxad4, #boxad5, #boxads, #bpAd, #bps-header-ad-container, #btnAds, #btnads, #btr_horiz_ad { display: none !important; } #burn_header_ad, #button-ads-horizontal, #button-ads-vertical, #buttonAdWrapper1, #buttonAdWrapper2, #buttonAds, #buttonAdsContainer, #button_ad_container, #button_ad_wrap, #button_ads, #buttonad, #buy-sell-ads, #c4ad-Middle1, #c_ad_sb, #c_ad_sky, #caAdLarger, #catad, #category-ad, #cellAd, #channel_ad { display: none !important; } #channel_ads, #ciHomeRHSAdslot, #circ_ad, #closeable-ad, #cmn_ad_box, #cmn_toolbar_ad, #cnnAboveFoldBelowAd, #cnnRR336ad, #cnnSponsoredPods, #cnnTopAd, #cnnVPAd, #col3_advertising, #colAd, #colRightAd, #collapseobj_adsection, #column4-google-ads, #comments-ad-container, #commercial_ads, #common_right_ad_wrapper, #common_right_lower_ad_wrapper { display: none !important; } #common_right_lower_adspace, #common_right_lower_player_ad_wrapper, #common_right_lower_player_adspace, #common_right_player_ad_wrapper, #common_right_player_adspace, #common_right_right_adspace, #common_top_adspace, #comp_AdsLeaderboardTop, #companion-ad, #companionAd, #companionAdDiv, #companionad, #container-righttopads, #container-topleftads, #containerLocalAds, #containerLocalAdsInner, #containerMrecAd, #containerSqAd, #content-ad-header, #content-header-ad { display: none !important; } #content-left-ad, #content-right-ad, #contentAd, #contentBoxad, #contentTopAds2, #content_ad, #content_ad_square, #content_ad_top, #content_ads_content, #content_box_300body_sponsoredoffers, #content_box_adright300_google, #content_lower_center_right_ad, #content_mpu, #contentad, #contentad_imtext, #contentad_right, #contentads, #contentinlineAd, #contents_post_ad, #contextad { display: none !important; } #contextual-ads, #contextual-ads-block, #contextualad, #coverADS, #coverads, #ctl00_Adspace_Top_Height, #ctl00_BottomAd, #ctl00_ContentMain_BanManAd468_BanManAd, #ctl00_ContentPlaceHolder1_blockAdd_divAdvert, #ctl00_ContentRightColumn_RightColumn_Ad1_BanManAd, #ctl00_ContentRightColumn_RightColumn_Ad2_BanManAd, #ctl00_ContentRightColumn_RightColumn_PremiumAd1_ucBanMan_BanManAd, #ctl00_LHTowerAd, #ctl00_LeftHandAd, #ctl00_MasterHolder_IBanner_adHolder, #ctl00_TopAd, #ctl00_TowerAd, #ctl00_VBanner_adHolder, #ctl00__Content__RepeaterReplies_ctl03__AdReply, #ctl00_abot_bb { display: none !important; } #ctl00_adFooter, #ctl00_advert_LargeMPU_div_AdPlaceHolder, #ctl00_atop_bt, #ctl00_cphMain_hlAd1, #ctl00_cphMain_hlAd2, #ctl00_cphMain_hlAd3, #ctl00_ctl00_MainPlaceHolder_itvAdSkyscraper, #ctl00_ctl00_ctl00_Main_Main_PlaceHolderGoogleTopBanner_MPTopBannerAd, #ctl00_ctl00_ctl00_Main_Main_SideBar_MPSideAd, #ctl00_dlTilesAds, #ctl00_m_skinTracker_m_adLBL, #ctl00_phCrackerMain_ucAffiliateAdvertDisplayMiddle_pnlAffiliateAdvert, #ctl00_phCrackerMain_ucAffiliateAdvertDisplayRight_pnlAffiliateAdvert, #ctl00_topAd, #ctrlsponsored, #cubeAd, #cube_ads, #cube_ads_inner, #cubead, #cubead-2 { display: none !important; } #currencies-sponsored-by, #custom-advert-leadboard-spacer, #dAdverts, #dItemBox_ads, #dart_160x600, #dc-display-right-ad-1, #dcadSpot-Leader, #dcadSpot-LeaderFooter, #dcol-sponsored, #defer-adright, #detail_page_vid_topads, #div-gpt-ad-1, #div-gpt-ad-2, #div-gpt-ad-3, #div-gpt-ad-4, #divAd, #divAdBox, #divAdWrapper, #divAdvertisement, #divBottomad1 { display: none !important; } #divBottomad2, #divDoubleAd, #divLeftAd12, #divLeftRecAd, #divMenuAds, #divWNAdHeader, #divWrapper_Ad, #div_ad_leaderboard, #div_video_ads, #dlads, #dni-header-ad, #dnn_adLeaderBoard2008, #dnn_ad_banner, #download_ads, #dp_ads1, #ds-mpu, #ds_ad_north_leaderboard, #editorsmpu, #em_ad_superbanner, #embedded-ad { display: none !important; } #evotopTen_advert, #ex-ligatus, #exads, #extra-search-ads, #fb_adbox, #fb_rightadpanel, #featAds, #featuread, #featured-advertisements, #featuredAdContainer2, #featuredAds, #featured_ad_links, #feed_links_ad_container, #file_sponsored_link, #first-300-ad, #first-adlayer, #first_ad_unit, #firstad, #flAdData6, #fl_hdrAd { display: none !important; } #flash_ads_1, #flexiad, #floatingAd, #floating_ad_container, #foot-ad-1, #footad, #footer-ad, #footer-ads, #footer-advert, #footer-adverts, #footer-sponsored, #footerAd, #footerAdDiv, #footerAds, #footerAdvertisement, #footerAdverts, #footer_ad, #footer_ad_01, #footer_ad_block, #footer_ad_container { display: none !important; } #footer_ad_modules, #footer_ads, #footer_adspace, #footer_text_ad, #footerad, #footerads, #footeradsbox, #forum_top_ad, #four_ads, #fpad1, #fpad2, #fpv_companionad, #fr_ad_center, #frame_admain, #frnAdSky, #frnBannerAd, #frnContentAd, #front_ad728, #front_advert, #front_mpu { display: none !important; } #ft-ad, #ft-ad-1, #ft-ad-container, #ft_mpu, #fullsizebanner_468x60, #fusionad, #fw-advertisement, #g_ad, #g_adsense, #ga_300x250, #galleries-tower-ad, #gallery-ad, #gallery-ad-m0, #gallery-random-ad, #gallery_ads, #game-info-ad, #gamead, #gameads, #gasense, #gglads { display: none !important; } #global_header_ad_area, #gm-ad-lrec, #gmi-ResourcePageAd, #gmi-ResourcePageLowerAd, #goad1, #goads, #gog_ad, #gooadtop, #google-ad, #google-ad-art, #google-ad-table-right, #google-ad-tower, #google-ads, #google-ads-bottom, #google-ads-header, #google-ads-left-side, #google-adsense-mpusize, #googleAd, #googleAdArea, #googleAdBottom { display: none !important; } #googleAds, #googleAdsSml, #googleAdsense, #googleAdsenseBanner, #googleAdsenseBannerBlog, #googleAdwordsModule, #googleAfcContainer, #googleSearchAds, #googleShoppingAdsRight, #googleShoppingAdsTop, #googleSubAds, #google_ad, #google_ad_container, #google_ad_inline, #google_ad_test, #google_ads, #google_ads_aCol, #google_ads_frame1, #google_ads_frame1_anchor, #google_ads_frame2 { display: none !important; } #google_ads_frame2_anchor, #google_ads_frame3, #google_ads_frame3_anchor, #google_ads_test, #google_ads_top, #google_adsense_home_468x60_1, #googlead, #googlead-sidebar-middle, #googlead-sidebar-top, #googlead2, #googleadbox, #googleads, #googleads_mpu_injection, #googleadsense, #googlesponsor, #gpt-ad-halfpage, #gpt-ad-rectangle1, #gpt-ad-rectangle2, #gpt-ad-skyscraper, #gpt-ad-story_rectangle3 { display: none !important; } #grid_ad, #gsyadrectangleload, #gsyadrightload, #gsyadtop, #gsyadtopload, #gtopadvts, #half-page-ad, #halfPageAd, #halfe-page-ad-box, #hd-ads, #hd-banner-ad, #hdtv_ad_ss, #head-ad, #head-ad-1, #head-banner468, #headAd, #headGoogleAffiliateLinkblock, #head_ad, #head_advert, #headad { display: none !important; } #header-ad, #header-ad-left, #header-ad-rectangle-container, #header-ad-right, #header-ad2010, #header-ads, #header-adspace, #header-advert, #header-advertisement, #header-advertising, #header-adverts, #header-banner-ad, #headerAd, #headerAdBackground, #headerAdContainer, #headerAdWrap, #headerAds, #headerAdsWrapper, #headerTopAd, #header_ad { display: none !important; } #header_ad_728_90, #header_ad_container, #header_adcode, #header_ads, #header_advertisement_top, #header_flag_ad, #header_leaderboard_ad_container, #header_publicidad, #headerad, #headeradbox, #headerads, #headeradsbox, #headeradvertholder, #headeradwrap, #headline_ad, #headlinesAdBlock, #hiddenadAC, #hideads, #hl-sponsored-results, #hly_ad_side_bar_tower_left { display: none !important; } #hly_inner_page_google_ad, #home-advert-module, #home-rectangle-ad, #home-top-ads, #homeMPU, #homeTopRightAd, #home_ad, #home_bottom_ad, #home_contentad, #home_feature_ad, #home_lower_center_right_ad, #home_mpu, #home_spensoredlinks, #homead, #homepage-ad, #homepageAdsTop, #homepageFooterAd, #homepage_right_ad, #homepage_right_ad_container, #homepage_top_ads { display: none !important; } #hometop_234x60ad, #hor_ad, #horizad, #horizontal-banner-ad, #horizontal_ad, #horizontal_ad_top, #horizontalads, #hot-deals-ad, #houseAd, #hp-header-ad, #hp-mpu, #hp-right-ad, #hp-store-ad, #hpV2_300x250Ad, #hpV2_googAds, #hp_ad300x250, #ibt_local_ad728, #icePage_SearchLinks_AdRightDiv, #icePage_SearchLinks_DownloadToolbarAdRightDiv, #icePage_SearchResults_ads0_SponsoredLink { display: none !important; } #icePage_SearchResults_ads1_SponsoredLink, #icePage_SearchResults_ads2_SponsoredLink, #icePage_SearchResults_ads3_SponsoredLink, #icePage_SearchResults_ads4_SponsoredLink, #idSponsoredresultend, #idSponsoredresultstart, #iframeRightAd, #iframeTopAd, #imu_ad_module, #in_serp_ad, #inadspace, #indexad, #inline-story-ad, #inlineAd, #inlinead, #inlinegoogleads, #inlist-ad-block, #inner-advert-row, #inner-top-ads, #innerpage-ad { display: none !important; } #inside-page-ad, #insider_ad_wrapper, #instoryad, #instoryadtext, #instoryadwrap, #int-ad, #interstitial_ad_wrapper, #iqadtile8, #islandAd, #iwad, #j_ad, #ji_medShowAdBox, #jmp-ad-buttons, #joead, #joead2, #js_adsense, #ka_adRightSkyscraperWide, #ka_samplead, #kaufDA-widget, #kdz_ad1 { display: none !important; } #kdz_ad2, #keyadvertcontainer, #landing-adserver, #lapho-top-ad-1, #largead, #lateAd, #layerAds_layerDiv, #layerTLDADSERV, #layer_ad_content, #layer_ad_main, #layerad, #leader-board-ad, #leaderAd, #leaderAdContainer, #leaderBoardAd, #leader_ad, #leader_board_ad, #leaderad, #leaderad_section, #leaderboard-ad { display: none !important; } #leaderboard-bottom-ad, #leaderboardAd, #leaderboard_ad, #leaderboard_ad_gam, #left-ad-1, #left-ad-2, #left-ad-col, #left-ad-skin, #left-bottom-ad, #left-lower-adverts, #left-lower-adverts-container, #leftAdContainer, #leftAd_rdr, #leftAdvert, #leftSectionAd300-100, #left_ad, #left_adspace, #left_advertisement, #leftad, #leftads { display: none !important; } #leftcolAd, #lg-banner-ad, #ligatus, #linkAds, #linkads, #live-ad, #localAds, #logoAd, #longAdSpace, #long_advertisement, #lowerAdvertisementImg, #lower_ad, #lowerads, #lowerthirdad, #lowertop-adverts, #lowertop-adverts-container, #lpAdPanel, #lrecad, #lsadvert-left_menu_1, #lsadvert-left_menu_2 { display: none !important; } #lsadvert-top, #mBannerAd, #main-ad, #main-ad160x600, #main-ad160x600-img, #main-ad728x90, #main-advert1, #main-advert2, #main-advert3, #main-bottom-ad, #main-tj-ad, #mainAd, #mainAdUnit, #mainAdvert, #mainAdvertismentP, #mainHeaderAdvertisment, #main_ad, #main_rec_ad, #main_top_ad_container, #marketing-promo { display: none !important; } #mastAd, #mastAdvert, #mastad, #mastercardAd, #masthead_ad, #masthead_topad, #medRecAd, #media_ad, #mediaplayer_adburner, #mediumAdvertisement, #medrectad, #menuAds, #menubanner-ad-content, #mi_story_assets_ad, #mid-ad300x250, #mid-table-ad, #midRightTextAds, #mid_ad_div, #mid_ad_title, #mid_mpu { display: none !important; } #midadd, #midadspace, #middle-ad, #middle_ad, #middle_body_advertising, #middlead, #middleads, #midrect_ad, #midstrip_ad, #mini-ad, #mochila-column-right-ad-300x250, #mochila-column-right-ad-300x250-1, #module-google_ads, #module_ad, #module_box_ad, #module_sky_scraper, #monsterAd, #moogleAd, #moreads, #most_popular_ad { display: none !important; } #motionAd, #mpu-advert, #mpu-cont, #mpu300250, #mpuAd, #mpuDiv, #mpuSlot, #mpuWrapper, #mpuWrapperAd, #mpu_banner, #mpu_firstpost, #mpu_holder, #mpu_text_ad, #mpuad, #mpubox, #mr_banner_topad, #mrecAdContainer, #msAds, #ms_ad, #msad { display: none !important; } #multiLinkAdContainer, #multi_ad, #my-ads, #myads_HeaderButton, #n_sponsor_ads, #namecom_ad_hosting_main, #narrow-ad, #narrow_ad_unit, #natadad300x250, #national_microlink_ads, #nationalad, #navi_banner_ad_780, #nba160PromoAd, #nba300Ad, #nbaGI300ad, #nbaHouseAnd600Ad, #nbaLeft600Ad, #nbaMidAds, #nbaVid300Ad, #nbcAd300x250 { display: none !important; } #new_topad, #newads, #news_advertorial_content, #news_advertorial_top, #ng_rtcol_ad, #noresults_ad_container, #noresultsads, #northad, #northbanner-advert, #northbanner-advert-container, #ns_ad1, #ns_ad2, #ns_ad3, #oanda_ads, #onespot-ads, #online_ad, #ovadsense, #p-googleadsense, #page-header-ad, #page-top-ad { display: none !important; } #pageAds, #pageAdsDiv, #pageBannerAd, #page_ad, #page_content_top_ad, #pagelet_adbox, #pagelet_netego_ads, #pagelet_search_ads2, #panelAd, #partnerAd, #pb_report_ad, #pcworldAdBottom, #pcworldAdTop, #pinball_ad, #player-below-advert, #player_ad, #player_ads, #pmad-in1, #pod-ad-video-page, #populate_ad_bottom { display: none !important; } #populate_ad_left, #popup_domination_lightbox_wrapper, #portlet-advertisement-left, #portlet-advertisement-right, #post-promo-ad, #post5_adbox, #post_ad, #premium_ad, #priceGrabberAd, #prime-ad-space, #print-header-ad, #print_ads, #printads, #product-adsense, #promo-ad, #promoAds, #ps-vertical-ads, #pub468x60, #publicGoogleAd, #publicidad { display: none !important; } #pushdown_ad, #qm-ad-big-box, #qm-ad-sky, #qm-dvdad, #quigo_ad, #r1SoftAd, #rail_ad1, #rail_ad2, #realEstateAds, #rectAd, #rect_ad, #rectangle-ad, #rectangleAd, #rectangle_ad, #refine-300-ad, #region-node-advert, #region-top-ad, #relocation_ad_container, #rh-ad-container, #rh_tower_ad { display: none !important; } #rhapsodyAd, #rhs_ads, #rhsadvert, #right-ad, #right-ad-col, #right-ad-skin, #right-ad-title, #right-ad1, #right-ads-3, #right-advert, #right-bar-ad, #right-box-ad, #right-featured-ad, #right-mpu-1-ad-container, #right-uppder-adverts, #right-uppder-adverts-container, #rightAd, #rightAd300x250, #rightAd300x250Lower, #rightAdBar { display: none !important; } #rightAdColumn, #rightAd_rdr, #rightAdsDiv, #rightColAd, #rightColumnMpuAd, #rightColumnSkyAd, #right_ad, #right_ad_wrapper, #right_ads, #right_advert, #right_advertisement, #right_advertising, #right_column_ad_container, #right_column_ads, #right_column_adverts, #right_column_internal_ad_container, #right_column_top_ad_unit, #rightad, #rightad2, #rightadContainer { display: none !important; } #rightads, #rightadvertbar-doubleclickads, #rightbar-ad, #rightcolhouseads, #rightcolumn_300x250ad, #rightgoogleads, #rightinfoad, #rightside-ads, #rightside_ad, #righttop-adverts, #righttop-adverts-container, #rm_ad_text, #ros_ad, #rotatingads, #row2AdContainer, #rprightHeaderAd, #rr_MSads, #rt-ad, #rt-ad-top, #rt-ad468 { display: none !important; } #rtMod_ad, #rtmod_ad, #sAdsBox, #sb-ad-sq, #sb_ad_links, #sb_advert, #search-google-ads, #search-sponsored-links, #search-sponsored-links-top, #searchAdSenseBox, #searchAdSenseBoxAd, #searchAdSkyscraperBox, #search_ads, #search_result_ad, #sec_adspace, #second-adlayer, #secondBoxAdContainer, #secondrowads, #sect-ad-300x100, #sect-ad-300x250-2 { display: none !important; } #section-ad-1-728, #section-ad-300-250, #section-ad-4-160, #section-blog-ad, #section-container-ddc_ads, #section_advertisements, #section_advertorial_feature, #servfail-ads, #sew-ad1, #shoppingads, #shortads, #show-ad, #showAd, #showad, #side-ad, #side-ad-container, #side-ads, #sideAd, #sideAd1, #sideAd2 { display: none !important; } #sideAdSub, #sideAds, #sideBarAd, #side_ad, #side_ad_wrapper, #side_ads_by_google, #side_sky_ad, #sidead, #sideads, #sideads_container, #sideadtop-to, #sidebar-125x125-ads, #sidebar-125x125-ads-below-index, #sidebar-ad, #sidebar-ad-boxes, #sidebar-ad-space, #sidebar-ad-wrap, #sidebar-ad3, #sidebar-ads, #sidebar-adv { display: none !important; } #sidebar-sponsor-link, #sidebar2ads, #sidebar_ad, #sidebar_ad_widget, #sidebar_ads, #sidebar_ads_180, #sidebar_sponsoredresult_body, #sidebar_txt_ad_links, #sidebarad, #sidebaradpane, #sidebarads, #sidebaradver_advertistxt, #sideline-ad, #single-mpu, #singlead, #site-ad-container, #site-leaderboard-ads, #site_top_ad, #sitead, #sky-ad { display: none !important; } #skyAd, #skyAdContainer, #skyScrapperAd, #skyWrapperAds, #sky_ad, #sky_advert, #skyads, #skyadwrap, #skyline_ad, #skyscrapeAd, #skyscraper-ad, #skyscraperAd, #skyscraperAdContainer, #skyscraper_ad, #skyscraper_advert, #skyscraperad, #slide_ad, #sliderAdHolder, #slideshow_ad_300x250, #sm-banner-ad { display: none !important; } #small_ad, #small_ad_banners_vertical, #small_ads, #smallerAd, #socialBarAd, #socialBarAdMini, #some-ads, #some-more-ads, #specialAd_one, #specialAd_two, #specialadvertisingreport_container, #specials_ads, #speeds_ads, #speeds_ads_fstitem, #speedtest_mrec_ad, #sphereAd, #spnAds, #sponlink, #sponlinks, #sponsAds { display: none !important; } #sponsLinks, #sponseredlinks, #sponsorAd1, #sponsorAd2, #sponsorAdDiv, #sponsorLinks, #sponsorTextLink, #sponsor_banderole, #sponsor_deals, #sponsored, #sponsored-ads, #sponsored-features, #sponsored-links, #sponsored-listings, #sponsored-resources, #sponsored1, #sponsoredBox1, #sponsoredBox2, #sponsoredLinks, #sponsoredLinks_Top { display: none !important; } #sponsoredList, #sponsoredResults, #sponsoredResultsWide, #sponsoredSiteMainline, #sponsoredSiteSidebar, #sponsored_ads_v4, #sponsored_container, #sponsored_content, #sponsored_game_row_listing, #sponsored_head, #sponsored_link, #sponsored_link_bottom, #sponsored_links, #sponsored_v12, #sponsoredads, #sponsoredlinks, #sponsoredlinks_cntr, #sponsoredlinkslabel, #sponsoredresults_top, #sponsoredwellcontainerbottom { display: none !important; } #sponsoredwellcontainertop, #sponsorlink, #spotlightAds, #spotlightad, #sqAd, #squareAd, #squareAdSpace, #squareAds, #square_ad, #srp_adsense-top, #start_middle_container_advertisment, #sticky-ad, #stickyBottomAd, #story-90-728-area, #story-ad-a, #story-ad-b, #story-leaderboard-ad, #story-sponsoredlinks, #storyAd, #storyAdWrap { display: none !important; } #storyad2, #submenu-ads, #subpage-ad-right, #subpage-ad-top, #swads, #synch-ad, #systemad_background, #tabAdvertising, #takeoverad, #tblAd, #tbl_googlead, #tcwAd, #td-GblHdrAds, #template_ad_leaderboard, #tertiary_advertising, #test_adunit_160_article, #text-ad, #text-ads, #text-link-ads, #textAd { display: none !important; } #textAds, #text_ad, #text_ads, #text_advert, #textad, #textad3, #textad_block, #the-last-ad-standing, #thefooterad, #themis-ads, #tile-ad, #tmglBannerAd, #tmp2_promo_ad, #toolbarSlideUpAd, #top-ad, #top-ad-container, #top-ad-menu, #top-ads, #top-ads-tabs, #top-advertisement { display: none !important; } #top-banner-ad, #top-search-ad-wrapper, #topAd, #topAd728x90, #topAdBanner, #topAdBox, #topAdContainer, #topAdSenseDiv, #topAdcontainer, #topAds, #topAdsContainer, #topAdvBox, #topAdvert, #topAdvert-09, #topBannerAd, #topBannerAdContainer, #topContentAdTeaser, #topNavLeaderboardAdHolder, #topOverallAdArea, #topRightBlockAdSense { display: none !important; } #topSponsoredLinks, #top_ad, #top_ad-sense, #top_ad_area, #top_ad_banner, #top_ad_game, #top_ad_unit, #top_ad_wrapper, #top_ad_zone, #top_ads, #top_ads_wrap, #top_advertise, #top_advertising, #top_rectangle_ad, #top_right_ad, #top_wide_ad, #topad, #topad1, #topad2, #topad_left { display: none !important; } #topad_right, #topadbar, #topadblock, #topaddwide, #topads, #topadsense, #topadspace, #topadwrap, #topadzone, #topbanner_ad, #topbannerad, #topbar-ad, #topcustomad, #topleaderboardad, #topnav-ad-shell, #topnavad, #toprightAdvert, #toprightad, #topsponsored, #toptextad { display: none !important; } #tour300Ad, #tour728Ad, #tourSponsoredLinksContainer, #towerad, #ts-ad_module, #ttp_ad_slot1, #ttp_ad_slot2, #twogamesAd, #txfPageMediaAdvertVideo, #txt_link_ads, #txtads, #undergameAd, #upper-ads, #upperAdvertisementImg, #upperMpu, #upper_small_ad, #upperad, #urban_contentad_1, #urban_contentad_2, #urban_contentad_article { display: none !important; } #uzcrsite, #v_ad, #vap_adsense-top, #vert-ads, #vert_ad, #vert_ad_placeholder, #vertical_ad, #vertical_ads, #videoAd, #videoAdvert, #video_ads_overdiv, #video_advert2, #video_advert3, #video_cnv_ad, #video_overlay_ad, #videoadlogo, #view_ads, #view_ads_advertisements, #viewads, #viewportAds { display: none !important; } #viewvid_ad300x250, #wXcds12-ad, #wall_advert, #wallpaper-ad-link, #wallpaperAd_left, #wallpaperAd_right, #walltopad, #weblink_ads_container, #welcomeAdsContainer, #welcome_ad_mrec, #welcome_advertisement, #wf_ContentAd, #wf_FrontSingleAd, #wf_SingleAd, #wf_bottomContentAd, #wgtAd, #whatsnews_top_ad, #whitepaper-ad, #whoisRightAdContainer, #wide_ad_unit_top { display: none !important; } #wideskyscraper_160x600_left, #wideskyscraper_160x600_right, #widget_Adverts, #widget_advertisement, #widgetwidget_adserve2, #wrapAdRight, #wrapAdTop, #wrapperAdsTopLeft, #wrapperAdsTopRight, #xColAds, #y-ad-units, #y708-ad-expedia, #y708-ad-lrec, #y708-ad-partners, #y708-ad-ysm, #y708-advertorial-marketplace, #yahoo-ads, #yahoo-sponsors, #yahooSponsored, #yahoo_ads { display: none !important; } #yahoo_ads_2010, #yahoo_text_ad, #yahooad-tbl, #yan-sponsored, #yatadsky, #ybf-ads, #yfi_fp_ad_mort, #yfi_fp_ad_nns, #yfi_pf_ad_mort, #ygrp-sponsored-links, #ymap_adbanner, #yn-gmy-ad-lrec, #yreSponsoredLinks, #ysm_ad_iframe, #zoneAdserverMrec, #zoneAdserverSuper, .ADBAR, .ADPod, .AD_ALBUM_ITEMLIST, .AD_MOVIE_ITEM { display: none !important; } .AD_MOVIE_ITEMLIST, .AD_MOVIE_ITEMROW, .ADbox, .Ad-300x100, .Ad-Container-976x166, .Ad-Header, .Ad-MPU, .Ad-Wrapper-300x100, .Ad120x600, .Ad160x600, .Ad160x600left, .Ad160x600right, .Ad247x90, .Ad300x, .Ad300x250, .Ad300x250L, .Ad728x90, .AdBorder, .AdBox, .AdBox7 { display: none !important; } .AdContainerBox308, .AdContainerModule, .AdHeader, .AdHere, .AdInfo, .AdInline, .AdMedium, .AdPlaceHolder, .AdProS728x90Container, .AdProduct, .AdRingtone, .AdSense, .AdSenseLeft, .AdSlot, .AdSpace, .AdTextSmallFont, .AdTitle, .AdUnit, .AdUnit300, .Ad_C { display: none !important; } .Ad_D_Wrapper, .Ad_E_Wrapper, .Ad_Right, .AdsBottom, .AdsBoxBottom, .AdsBoxSection, .AdsBoxTop, .AdsLinks1, .AdsLinks2, .AdsRec, .AdvBoxSidebar, .Advert, .Advert300x250, .AdvertMidPage, .AdvertiseWithUs, .Advertisement, .AdvertisementTextTag, .Advman_Widget, .ArticleAd, .ArticleInlineAd { display: none !important; } .BCA_Advertisement, .Banner300x250, .BannerAd, .BigBoxAd, .BlockAd, .BlueTxtAdvert, .BottomAdContainer, .BottomAffiliate, .BoxAd, .CG_adkit_leaderboard, .CG_details_ad_dropzone, .CWReviewsProdInfoAd, .ComAread, .CommentAd, .ContentAd, .ContentAds, .DAWRadvertisement, .DeptAd, .DisplayAd, .FT_Ad { display: none !important; } .FeaturedAdIndexAd, .FlatAds, .FooterAds, .GOOGLE_AD, .GoogleAd, .GoogleAdSenseBottomModule, .GoogleAdSenseRightModule, .HPG_Ad_B, .HPNewAdsBannerDiv, .HPRoundedAd, .HeaderAds, .HomeContentAd, .IABAdSpace, .InArticleAd, .IndexRightAd, .LazyLoadAd, .LeftAd, .LeftButtonAdSlot, .LeftTowerAd, .M2Advertisement { display: none !important; } .MD_adZone, .MOS-ad-hack, .MPUHolder, .MPUTitleWrapperClass, .MREC_ads, .MiddleAd, .MiddleAdContainer, .MiddleAdvert, .NewsAds, .OpaqueAdBanner, .OpenXad, .PU_DoubleClickAdsContent, .Post5ad, .Post8ad, .Post9ad, .RBboxAd, .RW_ad300, .RectangleAd, .RelatedAds, .Right300x250AD { display: none !important; } .RightAd1, .RightAdvertiseArea, .RightAdvertisement, .RightGoogleAFC, .RightRailAd, .RightRailTop300x250Ad, .RightSponsoredAdTitle, .RightTowerAd, .STR_AdBlock, .SectionSponsor, .SideAdCol, .SidebarAd, .SidebarAdvert, .SitesGoogleAdsModule, .SkyAdContainer, .SponsoredAdTitle, .SponsoredContent, .SponsoredLinkItemTD, .SponsoredLinks, .SponsoredLinksGrayBox { display: none !important; } .SponsoredLinksModule, .SponsoredLinksPadding, .SponsoredLinksPanel, .Sponsored_link, .SquareAd, .StandardAdLeft, .StandardAdRight, .TRU-onsite-ads-leaderboard, .TextAd, .TheEagleGoogleAdSense300x250, .TopAd, .TopAdContainer, .TopAdL, .TopAdR, .TopBannerAd, .UIWashFrame_SidebarAds, .UnderAd, .UpperAdsContainer, .VerticalAd, .Video-Ad { display: none !important; } .VideoAd, .WidgetAdvertiser, .a160x600, .a728x90, .ad-120x60, .ad-120x600, .ad-160, .ad-160x600, .ad-160x600x1, .ad-160x600x2, .ad-160x600x3, .ad-250, .ad-300, .ad-300-block, .ad-300-blog, .ad-300x100, .ad-300x250, .ad-300x250-first, .ad-300x250-right0, .ad-300x600 { display: none !important; } .ad-350, .ad-355x75, .ad-600, .ad-635x40, .ad-728, .ad-728x90, .ad-728x90-1, .ad-728x90-top0, .ad-728x90_forum, .ad-90x600, .ad-above-header, .ad-adlink-bottom, .ad-adlink-side, .ad-area, .ad-background, .ad-banner, .ad-banner-smaller, .ad-bigsize, .ad-block, .ad-block-square { display: none !important; } .ad-blog2biz, .ad-body, .ad-bottom, .ad-box, .ad-break, .ad-btn, .ad-btn-heading, .ad-button, .ad-cell, .ad-column, .ad-container, .ad-container-300x250, .ad-container-728x90, .ad-container-994x282, .ad-context, .ad-disclaimer, .ad-display, .ad-div, .ad-enabled, .ad-feedback { display: none !important; } .ad-filler, .ad-flex, .ad-footer, .ad-footer-leaderboard, .ad-forum, .ad-google, .ad-graphic-large, .ad-gray, .ad-grey, .ad-hdr, .ad-head, .ad-header, .ad-heading, .ad-here, .ad-holder, .ad-homeleaderboard, .ad-img, .ad-in-post, .ad-index-main, .ad-inline { display: none !important; } .ad-island, .ad-item, .ad-label, .ad-leaderboard, .ad-left, .ad-link, .ad-links, .ad-lrec, .ad-medium, .ad-medium-two, .ad-mpl, .ad-mpu, .ad-msn, .ad-note, .ad-notice, .ad-other, .ad-permalink, .ad-place-active, .ad-placeholder, .ad-postText { display: none !important; } .ad-poster, .ad-priority, .ad-rect, .ad-rectangle, .ad-rectangle-text, .ad-related, .ad-rh, .ad-ri, .ad-right, .ad-right-header, .ad-right-txt, .ad-row, .ad-section, .ad-show-label, .ad-side, .ad-sidebar, .ad-sidebar-outer, .ad-sidebar300, .ad-sky, .ad-skyscr { display: none !important; } .ad-skyscraper, .ad-slot, .ad-slot-234-60, .ad-slot-300-250, .ad-slot-728-90, .ad-source, .ad-space, .ad-space-mpu-box, .ad-space-topbanner, .ad-spot, .ad-square, .ad-square300, .ad-squares, .ad-statement, .ad-story-inject, .ad-tabs, .ad-text, .ad-text-links, .ad-tile, .ad-title { display: none !important; } .ad-top, .ad-top-left, .ad-unit, .ad-unit-300, .ad-unit-300-wrapper, .ad-unit-anchor, .ad-unit-top, .ad-vert, .ad-vertical-container, .ad-vtu, .ad-widget-list, .ad-with-us, .ad-wrap, .ad-wrapper, .ad-zone, .ad-zone-s-q-l, .ad.super, .ad08sky, .ad100, .ad120 { display: none !important; } .ad120x240backgroundGray, .ad120x600, .ad125, .ad125x125, .ad140, .ad160, .ad160600, .ad160x600, .ad160x600GrayBorder, .ad200x60, .ad230, .ad250, .ad250c, .ad300, .ad300250, .ad300_250, .ad300x100, .ad300x250, .ad300x250-hp-features, .ad300x250Module { display: none !important; } .ad300x250Top, .ad300x250_container, .ad300x250box, .ad300x50-right, .ad300x600, .ad310, .ad315, .ad336x280, .ad343x290, .ad400right, .ad450, .ad468, .ad468_60, .ad468x60, .ad540x90, .ad600, .ad620x70, .ad626X35, .ad644, .ad728 { display: none !important; } .ad728_90, .ad728x90, .ad728x90_container, .ad90x780, .adAgate, .adArea674x60, .adBanner, .adBanner300x250, .adBanner728x90, .adBannerTyp1, .adBannerTypSortableList, .adBannerTypW300, .adBar, .adBgBottom, .adBgMId, .adBgTop, .adBlock, .adBottomLink, .adBottomboxright, .adBox { display: none !important; } .adBox1, .adBox230X96, .adBox728X90, .adBoxBody, .adBoxBorder, .adBoxContainer, .adBoxContent, .adBoxInBignews, .adBoxSidebar, .adBoxSingle, .adBwrap, .adCMRight, .adCell, .adColumn, .adCont, .adContTop, .adContainer, .adContentAd, .adContour, .adCreative { display: none !important; } .adCube, .adDiv, .adElement, .adFender3, .adFrame, .adFtr, .adFullWidthMiddle, .adGoogle, .adHeader, .adHeadline, .adHolder, .adHome300x250, .adHorisontal, .adInNews, .adIsland, .adLabel, .adLeader, .adLeaderForum, .adLeaderboard, .adLeft { display: none !important; } .adLoaded, .adLocal, .adMPU, .adMarker, .adMastheadLeft, .adMastheadRight, .adMegaBoard, .adMinisLR, .adMkt2Colw, .adModule, .adModuleAd, .adMpu, .adNewsChannel, .adNoOutline, .adNotice, .adNoticeOut, .adObj, .adPageBorderL, .adPageBorderR, .adPanel { display: none !important; } .adPod, .adRect, .adResult, .adRight, .adSKY, .adSelfServiceAdvertiseLink, .adServer, .adSky, .adSky600, .adSkyscaper, .adSkyscraperHolder, .adSlot, .adSpBelow, .adSpace, .adSpacer, .adSplash, .adSponsor, .adSpot, .adSpot-brought, .adSpot-searchAd { display: none !important; } .adSpot-textBox, .adSpot-twin, .adSpotIsland, .adSquare, .adSubColPod, .adSummary, .adSuperboard, .adSupertower, .adTD, .adTab, .adTag, .adText, .adTileWrap, .adTiler, .adTitle, .adTopLink, .adTopboxright, .adTout, .adTxt, .adUnit { display: none !important; } .adUnitHorz, .adUnitVert, .adUnitVert_noImage, .adWebBoard, .adWidget, .adWithTab, .adWord, .adWrap, .adWrapper, .ad_0, .ad_1, .ad_120x90, .ad_125, .ad_130x90, .ad_160, .ad_160x600, .ad_2, .ad_200, .ad_200x200, .ad_250x250 { display: none !important; } .ad_250x250_w, .ad_3, .ad_300, .ad_300_250, .ad_300x250, .ad_300x250_box_right, .ad_336, .ad_336x280, .ad_350x100, .ad_350x250, .ad_400x200, .ad_468, .ad_468x60, .ad_600, .ad_680x15, .ad_728, .ad_728_90b, .ad_728x90, .ad_925x90, .ad_Left { display: none !important; } .ad_Right, .ad_ad_300, .ad_amazon, .ad_banner, .ad_banner_border, .ad_bar, .ad_bg, .ad_bigbox, .ad_biz, .ad_block, .ad_block_338, .ad_body, .ad_border, .ad_botbanner, .ad_bottom, .ad_bottom_leaderboard, .ad_bottom_left, .ad_box, .ad_box2, .ad_box_ad { display: none !important; } .ad_box_div, .ad_buttons_300, .ad_buttons_320, .ad_callout, .ad_caption, .ad_column, .ad_column_box, .ad_column_hl, .ad_contain, .ad_container, .ad_content, .ad_content_wide, .ad_contents, .ad_descriptor, .ad_disclaimer, .ad_eyebrow, .ad_footer, .ad_frame, .ad_framed, .ad_front_promo { display: none !important; } .ad_gutter_top, .ad_head, .ad_header, .ad_heading, .ad_headline, .ad_holder, .ad_hpm, .ad_image, .ad_info_block, .ad_inline, .ad_island, .ad_jnaught, .ad_label, .ad_launchpad, .ad_leader, .ad_leaderboard, .ad_left, .ad_line, .ad_link, .ad_links { display: none !important; } .ad_linkunit, .ad_loc, .ad_lrec, .ad_main, .ad_medrec, .ad_medrect, .ad_middle, .ad_mod, .ad_mp, .ad_mpu, .ad_mr, .ad_mrec, .ad_mrec_title_article, .ad_mrect, .ad_news, .ad_newsstream, .ad_note, .ad_notice, .ad_one, .ad_p360 { display: none !important; } .ad_partner, .ad_partners, .ad_plus, .ad_post, .ad_power, .ad_primary, .ad_promo, .ad_rec, .ad_rectangle, .ad_right, .ad_right_col, .ad_row, .ad_row_bottom_item, .ad_side, .ad_sidebar, .ad_skyscraper, .ad_slug, .ad_slug_table, .ad_space, .ad_space_300_250 { display: none !important; } .ad_spacer, .ad_sponsor, .ad_sponsoredsection, .ad_spot_b, .ad_spot_c, .ad_square_r, .ad_square_top, .ad_sub, .ad_supersize, .ad_tag_middle, .ad_text, .ad_text_w, .ad_title, .ad_top, .ad_top_leaderboard, .ad_top_left, .ad_topright, .ad_tower, .ad_unit, .ad_unit_rail { display: none !important; } .ad_url, .ad_warning, .ad_wid300, .ad_wide, .ad_wrap, .ad_wrapper, .ad_wrapper_fixed, .ad_wrapper_top, .ad_wrp, .ad_zone, .adarea, .adarea-long, .adbanner, .adbannerbox, .adbannerright, .adbar, .adboard, .adborder, .adbot, .adbottom { display: none !important; } .adbottomright, .adbox-outer, .adbox-wrapper, .adbox_300x600, .adbox_366x280, .adbox_468X60, .adbox_bottom, .adbox_br, .adbox_left, .adboxclass, .adboxesrow, .adbreak, .adbug, .adbutton, .adbuttons, .adcode, .adcol1, .adcol2, .adcolumn, .adcolumn_wrapper { display: none !important; } .adcont, .adcopy, .add_300x250, .addiv, .adenquire, .adfieldbg, .adfoot, .adfootbox, .adframe, .adhead, .adhead_h, .adhead_h_wide, .adheader, .adheader100, .adheader416, .adhi, .adhint, .adholder, .adhoriz, .adiframe { display: none !important; } .adinfo, .adinside, .adintro, .adits, .adjlink, .adkicker, .adkit, .adkit-advert, .adkit-lb-footer, .adlabel-horz, .adlabel-vert, .adlabelleft, .adlayer, .adleader, .adleaderboard, .adleft1, .adline, .adlink, .adlinks, .adlist { display: none !important; } .adlnklst, .admarker, .admediumred, .admedrec, .admessage, .admodule, .admpu, .admpu-small, .adnation-banner, .adnotice, .adops, .adp-AdPrefix, .adpadding, .adpane, .adpic, .adprice, .adproxy, .adrec, .adright, .adroot { display: none !important; } .adrotate_widget, .adrow, .adrow-post, .adrow1box1, .adrow1box3, .adrow1box4, .adrule, .ads-125, .ads-300, .ads-300x250, .ads-728x90-wrap, .ads-ads-top, .ads-banner, .ads-below-content, .ads-categories-bsa, .ads-custom, .ads-favicon, .ads-item, .ads-links-general, .ads-mpu { display: none !important; } .ads-outer, .ads-profile, .ads-rectangle, .ads-right, .ads-section, .ads-sidebar, .ads-sky, .ads-small, .ads-sponsors, .ads-stripe, .ads-text, .ads-top, .ads-wide, .ads-widget, .ads-widget-partner-gallery, .ads03, .ads160, .ads1_250, .ads24Block, .ads300 { display: none !important; } .ads460, .ads460_home, .ads468, .ads728, .ads728x90, .adsArea, .adsBelowHeadingNormal, .adsBlock, .adsBottom, .adsBox, .adsCell, .adsCont, .adsDiv, .adsFull, .adsImages, .adsInsideResults_v3, .adsMPU, .adsMiddle, .adsRight, .adsRow { display: none !important; } .adsTextHouse, .adsTop, .adsTower2, .adsTowerWrap, .adsWithUs, .ads_125_square, .ads_180, .ads_300, .ads_300x100, .ads_300x250, .ads_320, .ads_337x280, .ads_728x90, .ads_big, .ads_big-half, .ads_box, .ads_box_headline, .ads_brace, .ads_catDiv, .ads_container { display: none !important; } .ads_disc_anchor, .ads_disc_leader, .ads_disc_lwr_square, .ads_disc_skyscraper, .ads_disc_square, .ads_div, .ads_footer, .ads_header, .ads_holder, .ads_horizontal, .ads_leaderboard, .ads_lr_wrapper, .ads_medrect, .ads_mpu, .ads_outer, .ads_post_end, .ads_post_end_code, .ads_post_start, .ads_post_start_code, .ads_rectangle { display: none !important; } .ads_remove, .ads_right, .ads_rightbar_top, .ads_sc_bl_i, .ads_sc_tb, .ads_sc_tl_i, .ads_show_if, .ads_side, .ads_sidebar, .ads_singlepost, .ads_spacer, .ads_takeover, .ads_title, .ads_top, .ads_top_promo, .ads_tr, .ads_verticalSpace, .ads_vtlLink, .ads_widesky, .ads_wrapperads_top { display: none !important; } .adsafp, .adsbg300, .adsblockvert, .adsborder, .adsbottom, .adsbox, .adsboxitem, .adsbttmpg, .adsbyyahoo, .adscaleAdvert, .adscaleP6_canvas, .adsclick, .adscontainer, .adscreen, .adsd_shift100, .adsection_a2, .adsection_c2, .adsense-468, .adsense-ad, .adsense-category { display: none !important; } .adsense-category-bottom, .adsense-googleAds, .adsense-heading, .adsense-overlay, .adsense-post, .adsense-right, .adsense-title, .adsense3, .adsense300, .adsenseAds, .adsenseBlock, .adsenseContainer, .adsenseGreenBox, .adsenseInPost, .adsenseList, .adsense_bdc_v2, .adsense_mpu, .adsensebig, .adsenseblock, .adsenseblock_bottom { display: none !important; } .adsenseblock_top, .adsenselr, .adsensem_widget, .adsensesq, .adsenvelope, .adserver_zone, .adset, .adsforums, .adsghori, .adsgvert, .adshome, .adside, .adsidebox, .adsider, .adsingle, .adsleft, .adsleftblock, .adslink, .adslogan, .adslotleft { display: none !important; } .adslotright, .adsmalltext, .adsmessage, .adsnippet_widget, .adspace, .adspace-MR, .adspace-widget, .adspace180, .adspace_bottom, .adspace_buysell, .adspace_rotate, .adspace_skyscraper, .adspacer, .adspot, .adspot728x90, .adstext, .adstextpad, .adstitle, .adstop, .adstory { display: none !important; } .adstrip, .adtab, .adtable, .adtag, .adtech, .adtext, .adtext_gray, .adtext_horizontal, .adtext_onwhite, .adtext_vertical, .adtile, .adtips, .adtips1, .adtitle, .adtop, .adtravel, .adtxt, .adtxtlinks, .adunit, .adv-300 { display: none !important; } .adv-700, .adv-mpu, .adv-p, .adv-sidebar, .adv300, .adv300x250, .advBox, .advSquare, .advVideobox, .adv_120x600, .adv_300x250, .adv_728x90, .adv_banner_hor, .adv_medium_rectangle, .adver, .adverTag, .adverTxt, .adver_cont_below, .advert-300-side, .advert-300x100-side { display: none !important; } .advert-728x90, .advert-article-bottom, .advert-bannerad, .advert-bg-250, .advert-bloggrey, .advert-box, .advert-btm, .advert-head, .advert-horizontal, .advert-iab-300-250, .advert-iab-468-60, .advert-mpu, .advert-skyscraper, .advert-text, .advert-title, .advert-txt, .advert120, .advert300, .advert300x250, .advert300x300 { display: none !important; } .advert300x440, .advert350ih, .advert4, .advert5, .advert728x90, .advert8, .advertColumn, .advertCont, .advertContainer, .advertContent, .advertHeadline, .advertIslandWrapper, .advertRight, .advertSuperBanner, .advertText, .advertTitleSky, .advert_336, .advert_468x60, .advert_box, .advert_cont { display: none !important; } .advert_container, .advert_djad, .advert_google_content, .advert_google_title, .advert_home_300, .advert_label, .advert_leaderboard, .advert_list, .advert_note, .advert_surr, .advert_top, .advertheader-red, .advertise, .advertise-box, .advertise-here, .advertise-homestrip, .advertise-horz, .advertise-inquiry, .advertise-leaderboard, .advertise-list { display: none !important; } .advertise-top, .advertise-vert, .advertiseContainer, .advertiseText, .advertise_ads, .advertise_here, .advertise_link, .advertise_link_sidebar, .advertisement, .advertisement-728x90, .advertisement-block, .advertisement-sidebar, .advertisement-space, .advertisement-sponsor, .advertisement-swimlane, .advertisement-text, .advertisement-top, .advertisement300x250, .advertisement468, .advertisementBox { display: none !important; } .advertisementColumnGroup, .advertisementContainer, .advertisementHeader, .advertisementLabel, .advertisementPanel, .advertisementText, .advertisement_300x250, .advertisement_btm, .advertisement_caption, .advertisement_g, .advertisement_header, .advertisement_horizontal, .advertisement_top, .advertisementsOutterDiv, .advertiser, .advertiser-links, .advertisespace_div, .advertising-banner, .advertising-header, .advertising-leaderboard { display: none !important; } .advertising-local-links, .advertising2, .advertisingTable, .advertising_block, .advertising_images, .advertisment, .advertisment_bar, .advertisment_caption, .advertisment_two, .advertize, .advertize_here, .advertorial, .advertorial-2, .advertorial-promo-box, .advertorial_red, .advertorialtitle, .adverts-125, .adverts_RHS, .advt, .advt-banner-3 { display: none !important; } .advt-block, .advt-sec, .advt300, .advt720, .advtitle, .adwhitespace, .adwordListings, .adwords, .adwordsHeader, .adwrap, .adwrapper-lrec, .adwrapper948, .adzone-footer, .adzone-sidebar, .affiliate-link, .affiliate-sidebar, .affiliateAdvertText, .affiliates-sidebar, .affinityAdHeader, .afsAdvertising { display: none !important; } .after_ad, .agi-adsaleslinks, .alb-content-ad, .alignads, .alt_ad, .anchorAd, .another_text_ad, .answer_ad_content, .aolSponsoredLinks, .aopsadvert, .apiAdMarkerAbove, .apiAds, .app_advertising_skyscraper, .archive-ads, .art_ads, .article-ad-box, .article-ads, .article-content-adwrap, .articleAd, .articleAd300x250 { display: none !important; } .articleAds, .articleAdsL, .articleEmbeddedAdBox, .article_ad, .article_adbox, .article_mpu_box, .article_page_ads_bottom, .articleads, .aseadn, .aux-ad-widget-1, .aux-ad-widget-2, .b-astro-sponsored-links_horizontal, .b-astro-sponsored-links_vertical, .b_ads_cont, .b_ads_top, .banmanad, .banner-468-60, .banner-468x60, .banner-ad, .banner-ads { display: none !important; } .banner-adv, .banner-advert, .banner-adverts, .banner-buysellads, .banner160x600, .banner300by250, .banner300x100, .banner300x250, .banner468, .banner468by60, .banner728x90, .bannerADV, .bannerAd, .bannerAdWrapper300x250, .bannerAdWrapper730x86, .bannerAds, .bannerAdvert, .bannerRightAd, .banner_160x600, .banner_300x250 { display: none !important; } .banner_728x90, .banner_ad, .banner_ad_footer, .banner_ad_leaderboard, .bannerad, .bannerad-125tower, .bannerad-468x60, .barkerAd, .base-ad-mpu, .base_ad, .base_printer_widgets_AdBreak, .bg-ad-link, .bgnavad, .big-ads, .bigAd, .big_ad, .big_ads, .bigad, .bigad2, .bigbox_ad { display: none !important; } .bigboxad, .billboard300x250, .billboard_ad, .biz-ad, .biz-ads, .biz-adtext, .blk_advert, .block-ad, .block-ad300, .block-admanager, .block-ads-bottom, .block-ads-top, .block-adsense, .block-adsense-managed, .block-adspace-full, .block-bg-advertisement-region-1, .block-deca_advertising, .block-google-admanager, .block-google_admanager, .block-openads { display: none !important; } .block-openadstream, .block-openx, .block-thirdage-ads, .block-wtg_adtech, .blockAd, .blockAds, .block_ad, .block_ad_floating_bar, .block_ad_sb_text, .block_ad_sb_text2, .block_ad_sponsored_links, .block_ad_sponsored_links-wrapper, .block_ad_sponsored_links_localized, .blockad, .blocked-ads, .blog-ad-leader-inner, .blog-ads-container, .blogAd, .blogAdvertisement, .blogArtAd { display: none !important; } .blogBigAd, .blog_ad, .blogads, .blox3featuredAd, .bn_textads, .body_ad, .body_sponsoredresults_bottom, .body_sponsoredresults_middle, .body_sponsoredresults_top, .bodyads, .bodyads2, .bookseller-header-advt, .bottom-ad, .bottom-ad-fr, .bottom-ads, .bottomAd, .bottomAds, .bottom_ad, .bottom_ad_block, .bottom_ads { display: none !important; } .bottom_adsense, .bottom_right_ad, .bottomad, .bottomads, .bottomadvert, .bottombarad, .bottomrightrailAd, .bottomvidad, .box-ad, .box-ad-grey, .box-ads, .box-ads-small, .box-adsense, .box-adverts, .boxAd, .boxAds, .boxAdsInclude, .box_ad, .box_ad_container, .box_ad_content { display: none !important; } .box_ad_spacer, .box_ad_wrap, .box_ads, .box_adv, .box_adv_new, .box_advertising, .box_advertisment_62_border, .box_content_ad, .box_content_ads, .box_textads, .boxad, .boxads, .boxyads, .bps-ad-wrapper, .bps-advertisement, .bps-advertisement-inline-ads, .br-ad, .breakad_container, .brokerad, .bsa_ads { display: none !important; } .btm_ad, .btm_ad_container, .btn-ad, .bullet-sponsored-links, .bullet-sponsored-links-gray, .burstContentAdIndex, .busrep_poll_and_ad_container, .buttonAd, .buttonAds, .button_ads, .button_advert, .buttonadbox, .buttonads, .bx_ad, .bx_ad_right, .cA-adStrap, .cColumn-TextAdsBox, .cLeftTextAdUnit, .c_ligatus_nxn, .calendarAd { display: none !important; } .calloutAd, .can_ad_slug, .carbonad, .carbonad-tag, .care2_adspace, .catalog_ads, .category-ad, .categorySponsorAd, .category__big_game_container_body_games_advertising, .cb-ad-banner, .cb-ad-container, .cb_ads, .cb_navigation_ad, .cbstv_ad_label, .cbzadvert, .cbzadvert_block, .cdAdTitle, .cdmainlineSearchAdParent, .cdo-ad-section, .cdsidebarSearchAdParent { display: none !important; } .centerAd, .center_ad, .centerad, .centered-ad, .chitikaAdCopy, .cinemabotad, .classifiedAdThree, .clearerad, .cmAdContainer, .cmAdFind, .cmAdSponsoredLinksBox, .cm_ads, .cms-Advert, .cnbc_badge_banner_ad_area, .cnbc_banner_ad_area, .cnbc_leaderboard_ad, .cnn160AdFooter, .cnnAd, .cnnMosaic160Container, .cnnStoreAd { display: none !important; } .cnnStoryElementBoxAd, .cnnWCAdBox, .cnnWireAdLtgBox, .cnn_728adbin, .cnn_adcntr300x100, .cnn_adcntr728x90, .cnn_adspc336cntr, .cnn_adtitle, .cntrad, .column2-ad, .columnBoxAd, .columnRightAdvert, .com-ad-server, .comment-ad, .comment-ad-wrap, .comment-advertisement, .comment_ad_box, .common_advertisement_title, .communityAd, .conTSponsored { display: none !important; } .conductor_ad, .confirm_ad_left, .confirm_ad_right, .confirm_leader_ad, .consoleAd, .container-adwords, .containerSqAd, .container_serendipity_plugin_google_adsense, .content-ad, .content-ads, .content-advert, .contentAd, .contentAdContainer, .contentAdFoot, .contentAdsWrapper, .content_ad, .content_ad_728, .content_adsense, .content_adsq, .content_tagsAdTech { display: none !important; } .contentad, .contentad-home, .contentad300x250, .contentad_right_col, .contentadcontainer, .contentadfloatl, .contentadleft, .contentads, .contentadstartpage, .contents-ads-bottom-left, .contenttextad, .contest_ad, .cp_ad, .cpmstarHeadline, .cpmstarText, .create_ad, .cs-mpu, .cscTextAd, .cse_ads, .cspAd { display: none !important; } .ct_ad, .ctnAdSkyscraper, .ctnAdSquare300, .cube-ad, .cubeAd, .cube_ads, .currency_ad, .custom_ads, .customized_ad_module, .cwAdvert, .cxAdvertisement, .darla_ad, .dart-ad, .dartAdImage, .dart_ad, .dart_tag, .dartadvert, .dartiframe, .dc-ad, .dcAdvertHeader { display: none !important; } .deckAd, .deckads, .detail-ads, .detailMpu, .detail_ad, .detail_top_advert, .dfrads, .displayAdSlot, .divAd, .divAdright, .div_adv300, .div_advstrip, .divad1, .divad2, .divad3, .divads, .divider_ad, .dlSponsoredLinks, .dmco_advert_iabrighttitle, .downloadAds { display: none !important; } .download_ad, .downloadad, .dsq_ad, .dualAds, .dynamic-ads, .dynamic_ad, .e-ad, .ec-ads, .ec-ads-remove-if-empty, .em-ad, .em_ads_box_dynamic_remove, .embed-ad, .embeddedAd, .entry-body-ad, .entry-injected-ad, .entry_sidebar_ads, .entryad, .ez-clientAd, .f_Ads, .feature_ad { display: none !important; } .featuredAds, .featured_ad, .featuredadvertising, .fireplaceadleft, .fireplaceadright, .fireplaceadtop, .firstpost_advert_container, .flagads, .flash-advertisement, .flash_ad, .flash_advert, .flashad, .flexbanneritemad, .flexiad, .flipbook_v2_sponsor_ad, .floatad, .floated_right_ad, .floatingAds, .fm-badge-ad, .fns_td_wrap { display: none !important; } .fold-ads, .footad, .footer-ad, .footer-advert, .footerAd, .footerAdModule, .footerAds, .footerAdslot, .footerAdverts, .footerTextAd, .footer_ad, .footer_ad336, .footer_ads, .footer_banner_ad_container, .footer_block_ad, .footer_bottomad, .footer_line_ad, .footer_text_ad, .footerad, .footerads { display: none !important; } .forumtopad, .freedownload_ads, .frn_adbox, .frn_cont_adbox, .frontads, .frontpage-google-ad, .ft-ad, .ftdAdBar, .ftdContentAd, .full_ad_box, .full_width_ad, .fullbannerad, .g3rtn-ad-site, .gAdRows, .gAdSky, .gAdvertising, .g_ggl_ad, .ga-ads, .ga-textads-bottom, .ga-textads-top { display: none !important; } .gaTeaserAds, .gaTeaserAdsBox, .gads_cb, .gads_container, .gallery_ad, .gam_ad_slot, .gameAd, .gamesPage_ad_content, .gbl_advertisement, .gen_side_ad, .geoAd, .ggads, .gglAds, .global_banner_ad, .googad, .googads, .google-ad, .google-ad-container, .google-ads, .google-ads-boxout { display: none !important; } .google-ads-slim, .google-adsense, .google-right-ad, .google-sponsored-ads, .google-sponsored-link, .google468, .google468_60, .googleAd, .googleAd-content, .googleAd-list, .googleAd300x250_wrapper, .googleAdBox, .googleAdSense, .googleAdSenseModule, .googleAd_body, .googleAds, .googleAds_article_page_above_comments, .googleAdsense, .googleContentAds, .googleProfileAd { display: none !important; } .googleSearchAd_content, .googleSearchAd_sidebar, .google_ad, .google_ad_wide, .google_add_container, .google_ads, .google_ads_bom_title, .google_ads_content, .google_adsense_footer, .googlead, .googleaddiv, .googleaddiv2, .googleads, .googleads_300x250, .googleads_title, .googleadsense, .googleafc, .googley_ads, .gpAdBox, .gpAds { display: none !important; } .gradientAd, .grey-ad-line, .group_ad, .gsAd, .gsfAd, .gt_ad, .gt_ad_300x250, .gt_ad_728x90, .gt_adlabel, .gutter-ad-left, .gutter-ad-right, .gx_ad, .h-ad-728x90-bottom, .h_Ads, .h_ad, .half-ad, .half_ad_box, .hcf-ad, .hcf-ad-rectangle, .hcf-cms-ad { display: none !important; } .hd_advert, .hdr-ads, .head_ad, .header-ad, .header-advert, .header-google-ads, .header-taxonomy-image-sponsor, .headerAd, .headerAdCode, .headerAds, .headerAdvert, .headerTextAd, .header_ad, .header_ad_center, .header_ad_div, .header_ads, .header_advertisement, .header_advertisment, .headerad, .headerad-720 { display: none !important; } .hi5-ad, .highlightsAd, .hm_advertisment, .hn-ads, .home-ad-links, .homeAd, .homeAd1, .homeAd2, .homeAdBoxA, .homeAdBoxBetweenBlocks, .homeAdBoxInBignews, .homeAdSection, .homeMediumAdGroup, .home_ad_bottom, .home_advertisement, .home_advertorial, .home_mrec_ad, .homead, .homepage-ad, .homepage300ad { display: none !important; } .homepageFlexAdOuter, .homepageMPU, .homepage_middle_right_ad, .homepageinline_adverts, .hor_ad, .horiz_adspace, .horizontalAd, .horizontal_ad, .horizontal_ads, .horizontalbtad, .horizontaltextadbox, .horizsponsoredlinks, .hortad, .houseAd1, .houseAdsStyle, .housead, .hoverad, .hp-col4-ads, .hp2-adtag, .hp_ad_cont { display: none !important; } .hp_ad_text, .hp_t_ad, .hp_w_ad, .hpa-ad1, .html-advertisement, .ic-ads, .ico-adv, .idMultiAd, .iframe-ad, .image-advertisement, .imageAd, .imageads, .imgad, .in-page-ad, .in-story-ads, .in-story-text-ad, .inStoryAd-news2, .indEntrySquareAd, .indie-sidead, .indy_googleads { display: none !important; } .infoBoxThreadPageRankAds, .inhousead, .inline-ad, .inline-mpu, .inline-mpu-left, .inlineSideAd, .inline_ad, .inline_ad_title, .inlinead, .inlineadsense, .inlineadtitle, .inlist-ad, .inlistAd, .inner-advt-banner-3, .innerAds, .innerad, .inpostad, .insert_advertisement, .insertad, .insideStoryAd { display: none !important; } .inteliusAd_image, .interest-based-ad, .internalAdsContainer, .iprom-ad, .is24-adplace, .isAd, .islandAd, .islandAdvert, .islandad, .itemAdvertise, .jimdoAdDisclaimer, .jp-advertisment-promotional, .js-advert, .kdads-empty, .kdads-link, .kw_advert, .kw_advert_pair, .l_ad_sub, .label-ad, .labelads { display: none !important; } .largeRecAdNewsContainerRight, .largeRectangleAd, .largeUnitAd, .large_ad, .lastRowAd, .lazyload_ad, .lcontentbox_ad, .leadAd, .leaderAdSlot, .leaderAdTop, .leaderAdvert, .leaderBoardAdHolder, .leaderOverallAdArea, .leader_ad, .leaderboardAd, .leaderboardAdContainer, .leaderboardAdContainerInner, .leaderboard_ad, .leaderboardad, .leaderboardadtop { display: none !important; } .left-ad, .left-advert, .leftAd, .leftAdColumn, .leftAds, .left_ad, .left_ad_box, .left_adlink, .left_ads, .left_adsense, .leftad, .leftadtag, .leftbar_ad_160_600, .leftbarads, .leftbottomads, .leftnavad, .lgRecAd, .lg_ad, .ligatus, .linead { display: none !important; } .link_adslider, .link_advertise, .live-search-list-ad-container, .livingsocial-ad, .ljad, .local-ads, .log_ads, .logoAds, .logoad, .logoutAd, .longAd, .longAdBox, .lowerAds, .lr-ad, .m-ad-tvguide-box, .m4-adsbygoogle, .m_banner_ads, .macAd, .macad, .main-ad { display: none !important; } .main-advert, .main-tabs-ad-block, .mainAd, .mainLeftAd, .mainLinkAd, .mainRightAd, .main_ad, .main_ad_bg_div, .main_adbox, .main_ads, .main_intro_ad, .map_media_banner_ad, .marginadsthin, .marketing-ad, .masthead_topad, .matador_sidebar_ad_600, .mdl-ad, .media-advert, .mediaAd, .mediaAdContainer { display: none !important; } .mediaResult_sponsoredSearch, .medium-rectangle-ad, .mediumRectangleAdvert, .medium_ad, .medrect_ad, .member-ads, .menuItemBannerAd, .menueadimg, .messageBoardAd, .mf-ad300-container, .micro_ad, .mid_ad, .mid_page_ad, .midad, .middle-ad, .middleAds, .middlead, .middleads, .min_navi_ad, .mini-ad { display: none !important; } .miniad, .miscAd, .mmc-ad, .mmcAd_Iframe, .mobile_featuredad, .mod-ad-lrec, .mod-ad-n, .mod-adopenx, .mod-vertical-ad, .mod_admodule, .module-ad, .module-ad-small, .module-ads, .module-advertisement, .module-sponsored-ads, .moduleAd, .moduleAdvertContent, .module_ad, .module_box_ad, .modulegad { display: none !important; } .moduletable-advert, .moduletable-googleads, .moduletablesquaread, .mos-ad, .mpu-ad, .mpu-ad-con, .mpu-advert, .mpu-footer, .mpu-fp, .mpu-title, .mpu-top-left, .mpu-top-left-banner, .mpu-top-right, .mpu01, .mpuAd, .mpuAdSlot, .mpuAdvert, .mpuArea, .mpuBox, .mpuContainer { display: none !important; } .mpuHolder, .mpuTextAd, .mpu_ad, .mpu_advert, .mpu_container, .mpu_gold, .mpu_holder, .mpu_placeholder, .mpu_platinum, .mpu_side, .mpu_text_ad, .mpuad, .mpuholderportalpage, .mrec_advert, .ms-ads-link, .msfg-shopping-mpu, .mvw_onPageAd1, .mwaads, .my-ad250x300, .nSponsoredLcContent { display: none !important; } .nSponsoredLcTopic, .nadvt300, .narrow_ad_unit, .narrow_ads, .navAdsBanner, .navBads, .nav_ad, .navadbox, .navcommercial, .navi_ad300, .naviad, .nba300Ad, .nbaT3Ad160, .nbaTVPodAd, .nbaTwo130Ads, .nbc_ad_carousel_wrp, .newPex_forumads, .newTopAdContainer, .newad, .newsAd { display: none !important; } .news_article_ad_google, .newsviewAdBoxInNews, .newsvinemsn_adtype, .nexusad, .nf-adbox, .nn-mpu, .noAdForLead, .normalAds, .nrAds, .nsAdRow, .nu2ad, .oas-ad, .oas-bottom-ads, .oas_ad, .oas_advertisement, .offer_sponsoredlinks, .oio-banner-zone, .oio-link-sidebar, .oio-zone-position, .on_single_ad_box { display: none !important; } .onethirdadholder, .openads, .openadstext_after, .openx, .openx-ad, .openx_ad, .osan-ads, .other_adv2, .outermainadtd1, .ovAdPromo, .ovAdSky, .ovAdartikel, .ov_spns, .ovadsenselabel, .pageAds, .pageBottomGoogleAd, .pageGoogleAd, .pageGoogleAdFlat, .pageGoogleAdSubcontent, .pageGoogleAds { display: none !important; } .pageGoogleAdsContainer, .pageLeaderAd, .page_content_right_ad, .pagead, .pageads, .pagenavindexcontentad, .paneladvert, .partner-ad, .partner-ads-container, .partnerAd, .partnersTextLinks, .pencil_ad, .player_ad_box, .player_hover_ad, .player_page_ad_box, .plista_inimg_box, .pm-ad, .pmad-in2, .pnp_ad, .pod-ad-300 { display: none !important; } .podRelatedAdLinksWidget, .podSponsoredLink, .portalCenterContentAdBottom, .portalCenterContentAdMiddle, .portalCenterContentAdTop, .portal_searchresultssponsoredlist, .portalcontentad, .post-ad, .postAd, .post_ad, .post_ads, .post_sponsor_unit, .postbit_adbit_register, .postbit_adcode, .postgroup-ads, .postgroup-ads-middle, .prebodyads, .premium_ad_container, .promoAd, .promoAds { display: none !important; } .promo_ad, .promoboxAd, .promotionTextAd, .ps-ligatus_placeholder, .pub_300x250, .pub_300x250m, .pub_728x90, .publication-ad, .publicidad, .puff-advertorials, .qa_ad_left, .qm-ad-content, .qm-ad-content-news, .quigo-ad, .qzvAdDiv, .r_ad_1, .r_ad_box, .r_ads, .rad_container, .rect_ad_module { display: none !important; } .rectad, .rectangle-ad, .rectangleAd, .rectanglead, .redads_cont, .referrerDetailAd, .regular_728_ad, .regularad, .relatedAds, .related_post_google_ad, .relatesearchad, .remads, .resourceImagetAd, .result_ad, .reviewMidAdvertAlign, .rght300x250, .rhads, .rhs-ad, .rhs-ads-panel, .rhs-advert-container { display: none !important; } .rhs-advert-link, .rhs-advert-title, .right-ad, .right-ad-holder, .right-ad2, .right-ads, .right-ads2, .right-sidebar-box-ad, .rightAd, .rightAdBox, .rightAdverts, .rightColAd, .rightColumnRectAd, .rightRailAd, .right_ad, .right_ad_160, .right_ad_box, .right_ad_common_block, .right_ad_text, .right_ad_top { display: none !important; } .right_ads, .right_ads_column, .right_box_ad_rotating_container, .right_col_ad, .right_hand_advert_column, .right_side-partyad, .rightad, .rightad_1, .rightad_2, .rightadbox1, .rightads, .rightadunit, .rightbigcolumn_ads, .rightbigcolumn_ads_nobackground, .rightcol_boxad, .rightcoladvert, .rightcoltowerad, .rightmenu_ad, .rnav_ad, .rngtAd { display: none !important; } .rot_ads, .round_box_advert, .roundedCornersAd, .roundingrayboxads, .rt_ad1_300x90, .rt_ad_300x250, .rt_ad_call, .s2k_ad, .savvyad_unit, .sb-ad-sq-bg, .sbAd, .sbAdUnitContainer, .sb_ad_holder, .sb_adsN, .sb_adsNv2, .sb_adsW, .sb_adsWv2, .scanAd, .scc_advert, .sci-ad-main { display: none !important; } .sci-ad-sub, .search-ad, .search-results-ad, .search-sponsor, .search-sponsored, .searchAd, .searchAdTop, .searchAds, .searchSponsoredResultsBox, .searchSponsoredResultsList, .search_column_results_sponsored, .search_results_sponsored_top, .section-ad2, .section_mpu_wrapper, .section_mpu_wrapper_wrapper, .selfServeAds, .sepContentAd, .serp_sponsored, .servsponserLinks, .shoppingGoogleAdSense { display: none !important; } .showAd_No, .showAd_Yes, .showcaseAd, .sidbaread, .side-ad, .side-ads, .side-sky-banner-160, .sideAd, .sideBoxAd, .side_ad, .side_ad2, .side_ad_1, .side_ad_2, .side_ad_3, .sidead, .sideads, .sideadsbox, .sideadvert, .sidebar-ad, .sidebar-ads { display: none !important; } .sidebar-content-ad, .sidebar-text-ad, .sidebarAd, .sidebarAdUnit, .sidebarAdvert, .sidebar_ad, .sidebar_ad_300_250, .sidebar_ads, .sidebar_ads_336, .sidebar_adsense, .sidebar_box_ad, .sidebarad, .sidebarad_bottom, .sidebaradbox, .sidebarads, .sidebarboxad, .sideheadnarrowad, .sideheadsponsorsad, .simple_ads_manager_widget, .single-google-ad { display: none !important; } .singleAd, .singleAdsContainer, .single_ad, .singlead, .singleadstopcstm2, .site_ad_120_600, .site_ad_300x250, .sitesponsor, .sitesprite_ads, .skinAd, .skin_ad_638, .sky-ad, .skyAd, .skyAdd, .skyAdvert, .skyAdvert2, .sky_ad, .sky_scraper_ad, .skyad, .skyjobsadtext { display: none !important; } .skyscraper-ad, .skyscraper_ad, .skyscraper_bannerAdHome, .sleekadbubble, .slideshow-ad, .slpBigSlimAdUnit, .slpSquareAdUnit, .sm_ad, .smallSkyAd1, .smallSkyAd2, .small_ad, .small_ads, .smallad-left, .smallads, .smallsponsorad, .smart_ads_bom_title, .spLinks, .specialAd175x90, .speedyads, .sphereAdContainer { display: none !important; } .spl-ads, .spl_ad, .spl_ad2, .spl_ad_plus, .splitAd, .splitAdResultsPane, .sponlinkbox, .spons-link, .spons_links, .sponslink, .sponsor-ad, .sponsor-link, .sponsor-links, .sponsor-services, .sponsorPanel, .sponsorPost, .sponsorPostWrap, .sponsorStrip, .sponsor_ad_area, .sponsor_area { display: none !important; } .sponsor_bar, .sponsor_columns, .sponsor_footer, .sponsor_line, .sponsor_links, .sponsor_logo, .sponsoradtitle, .sponsored-ads, .sponsored-chunk, .sponsored-editorial, .sponsored-features, .sponsored-links, .sponsored-links-alt-b, .sponsored-links-holder, .sponsored-links-right, .sponsored-post, .sponsored-post_ad, .sponsored-results, .sponsored-right-border, .sponsored-text { display: none !important; } .sponsoredBox, .sponsoredInfo, .sponsoredInner, .sponsoredLabel, .sponsoredLink, .sponsoredLinks, .sponsoredLinks2, .sponsoredLinksHeader, .sponsoredProduct, .sponsoredResults, .sponsoredSideInner, .sponsored_ads, .sponsored_box, .sponsored_box_search, .sponsored_by, .sponsored_link, .sponsored_links, .sponsored_links_title_container, .sponsored_links_title_container_top, .sponsored_links_top { display: none !important; } .sponsored_result, .sponsored_results, .sponsored_ss, .sponsored_well, .sponsoredibbox, .sponsoredlink, .sponsoredlinks, .sponsoredlinkscontainer, .sponsoredresults, .sponsoredtextlink_container_ovt, .sponsoring_link, .sponsorlink, .sponsorlink2, .sponsormsg, .sport-mpu-box, .spotlightAd, .squareAd, .square_ad, .square_banner_ad, .squared_ad { display: none !important; } .ss-ad-banner, .ss-ad-mpu, .standard-ad, .start__newest__big_game_container_body_games_advertising, .staticAd, .stickyAdLink, .stock-ticker-ad-tag, .stocks-ad-tag, .store-ads, .story_AD, .story_ad_div, .story_right_adv, .storyad, .subad, .subadimg, .subcontent-ad, .subtitle-ad-container, .sugarad, .super-ad, .supercommentad_left { display: none !important; } .supercommentad_right, .supp-ads, .supportAdItem, .surveyad, .t10ad, .tab_ad, .tab_ad_area, .tablebordersponsor, .tadsanzeige, .tadsbanner, .tadselement, .tallad, .tblTopAds, .tbl_ad, .tbox_ad, .td-Adholder, .td-TrafficWeatherWidgetAdGreyBrd, .teaser-sponsor, .teaserAdContainer, .teaser_adtiles { display: none !important; } .teaser_advert_content, .text-ad, .text-ad-links, .text-ads, .text-advertisement, .text-g-advertisement, .text-g-group-short-rec-ad, .text-g-net-grp-google-ads-article-page, .textAd, .textAdBox, .textAds, .text_ad, .text_ads, .textad, .textadContainer, .textad_headline, .textadbox, .textadheadline, .textadlink, .textads { display: none !important; } .textads_left, .textads_right, .textadsds, .textadsfoot, .textadtext, .textadtxt, .textadtxt2, .textlink-ads, .textlinkads, .tf_page_ad_search, .thirdage_ads_300x250, .thirdage_ads_728x90, .thisIsAd, .thisIsAnAd, .ticket-ad, .tileAds, .tips_advertisement, .title-ad, .title_adbig, .tncms-region-ads { display: none !important; } .toolad, .toolbar-ad, .top-ad, .top-ad-space, .top-ads, .top-banner-ad, .top-left-nav-ad, .top-menu-ads, .topAd, .topAdWrap, .topAds, .topAdvertisement, .topAdverts, .topBannerAd, .topLeaderboardAd, .top_Ad, .top_ad, .top_ad1, .top_ad_728, .top_ad_728_90 { display: none !important; } .top_ad_disclaimer, .top_ad_div, .top_ad_post, .top_ad_wrapper, .top_ads, .top_advert, .top_advertisement, .top_advertising_lb, .top_bar_ad, .top_container_ad, .topad, .topad-bar, .topadbox, .topads, .topadspot, .topadvertisementsegment, .topboardads, .topcontentadvertisement, .topic_inad, .topstoriesad { display: none !important; } .toptenAdBoxA, .tourFeatureAd, .tower-ad, .towerAd, .towerAdLeft, .towerAds, .tower_ad, .tower_ad_disclaimer, .towerad, .tr-ad-adtech-placement, .tribal-ad, .ts-ad_unit_bigbox, .ts-banner_ad, .ttlAdsensel, .tto-sponsored-element, .tucadtext, .tvs-mpu, .twoColumnAd, .twoadcoll, .twoadcolr { display: none !important; } .tx_smartadserver_pi1, .txt-ads, .txtAd, .txtAds, .txt_ad, .txt_ads, .txtadvertise, .type_adscontainer, .type_miniad, .type_promoads, .ukAds, .ukn-banner-ads, .under_ads, .undertimyads, .unit-ad, .universalboxADVBOX01, .universalboxADVBOX03, .universalboxADVBOX04a, .usenext, .v5rc_336x280ad { display: none !important; } .vert-ads, .vert-adsBlock, .vertad, .vertical-adsense, .vidadtext, .videoAd, .videoBoxAd, .video_ad, .view-promo-mpu-right, .view_rig_ad, .virgin-mpu, .wa_adsbottom, .wantads, .weather_ad, .webads336x280, .wide-ad, .wide-advert, .wide-skyscraper-ad, .wideAd, .wideAdTable { display: none !important; } .wide_ad, .wide_ad_unit_top, .wide_ads, .wide_google_ads, .widget-ad, .widget-ad-codes, .widget-ad300x250, .widget-entry-ads-160, .widgetYahooAds, .widget_ad, .widget_ad_boxes_widget, .widget_ad_rotator, .widget_adrotate_widgets, .widget_ads, .widget_advert_widget, .widget_econaabachoadswidget, .widget_island_ad, .widget_maxbannerads, .widget_sdac_bottom_ad_widget, .widget_sdac_footer_ads_widget { display: none !important; } .widget_sdac_skyscraper_ad_widget, .widget_sdac_top_ad_widget, .wikia-ad, .wikia_ad_placeholder, .wingadblock, .withAds, .wl-ad, .wnMultiAd, .wp125_write_ads_widget, .wp125ad, .wp125ad_2, .wpn_ad_content, .wrap-ads, .wrapper-ad, .wrapper-ad-sidecol, .wsSponsoredLinksRight, .wsTopSposoredLinks, .x03-adunit, .x04-adunit, .x81_ad_detail { display: none !important; } .xads-blk-top-hld, .xads-blk2, .xads-ojedn, .y-ads, .y-ads-wide, .y7-advertisement, .yahoo-sponsored, .yahoo-sponsored-links, .yahooAd, .yahooAds, .yahoo_ads, .yahooad, .yahooad-image, .yahooad-urlline, .yan-sponsored, .ygrp-ad, .yom-ad, .youradhere, .yrail_ad_wrap, .yrail_ads { display: none !important; } .ysmsponsor, .ysponsor, .yw-ad, .zRightAdNote, a[href*="/adrotate/adrotate-out.php?"], a[href^="http://ad-apac.doubleclick.net/"], a[href^="http://ad-emea.doubleclick.net/"], a[href^="http://ad.doubleclick.net/"], a[href^="http://ads.pheedo.com/"], a[href^="http://adserving.liveuniversenetwork.com/"], a[href^="http://api.ringtonematcher.com/"], a[href^="http://galleries.pinballpublishernetwork.com/"], a[href^="http://galleries.securewebsiteaccess.com/"], a[href^="http://games.ucoz.ru/"][target="_blank"], a[href^="http://install.securewebsiteaccess.com/"], a[href^="http://latestdownloads.net/download.php?"], a[href^="http://secure.signup-page.com/"], a[href^="http://secure.signup-way.com/"], a[href^="http://www.FriendlyDuck.com/AF_"], a[href^="http://www.adbrite.com/mb/commerce/purchase_form.php?"] { display: none !important; } a[href^="http://www.firstload.de/affiliate/"], a[href^="http://www.friendlyduck.com/AF_"], a[href^="http://www.google.com/aclk?"], a[href^="http://www.liutilities.com/aff"], a[href^="http://www.liutilities.com/products/campaigns/adv/"], a[href^="http://www.my-dirty-hobby.com/?sub="], a[href^="http://www.ringtonematcher.com/"], #cnt #center_col > #res > #topstuff > .ts:only-child, #mbEnd[cellspacing="0"][cellpadding="0"], #mclip_container:last-child, #mn #center_col > div > h2.spon:first-child, #mn #center_col > div > h2.spon:first-child + ol:last-child, #ssmiwdiv[jsdisplay], #tads.c, #tadsb.c, #tadsto.c, .ch[onclick="ga(this,event)"], .ra[align="left"][width="30%"], .ra[align="right"][width="30%"], iframe[name^="AdbriteFrame"] { display: none !important; }</style>
<body>

<div id="headnav">
 <a href="http://www.php.net/" rel="home"><img src="./PHP  fputcsv - Manual_files/php_snow_2008.gif" alt="PHP" width="120" height="67" id="phplogo"></a>
 <div id="headmenu">
  <a href="http://www.php.net/downloads.php">downloads</a> |
  <a href="http://www.php.net/docs.php">documentation</a> |
  <a href="http://www.php.net/FAQ.php">faq</a> |
  <a href="http://www.php.net/support.php">getting help</a> |
  <a href="http://www.php.net/mailing-lists.php">mailing lists</a> |
  <a href="http://www.php.net/license">licenses</a> |
  <a href="https://wiki.php.net/">wiki</a> |
  <a href="https://bugs.php.net/">reporting bugs</a> |
  <a href="http://www.php.net/sites.php">php.net sites</a> |
  <a href="http://www.php.net/links.php">links</a> |
  <a href="http://www.php.net/conferences/">conferences</a> |
  <a href="http://www.php.net/my.php">my php.net</a>
 </div>
</div>

<div id="headsearch">
 <form method="post" action="http://www.php.net/search.php" id="topsearch">
  <p>
   <span title="Keyboard shortcut: Alt+S (Win), Ctrl+S (Apple)">
    <span class="shortkey">s</span>earch for
   </span>
   <input type="text" name="pattern" value="" size="30" accesskey="s">
   <span>in the</span>
   <select name="show">
    <option value="all">all php.net sites</option>
    <option value="local">this mirror only</option>
    <option value="quickref" selected="selected">function list</option>
    <option value="manual">online documentation</option>
    <option value="bugdb">bug database</option>
    <option value="news_archive">Site News Archive</option>
    <option value="changelogs">All Changelogs</option>
    <option value="pear">just pear.php.net</option>
    <option value="pecl">just pecl.php.net</option>
    <option value="talks">just talks.php.net</option>
    <option value="maillist">general mailing list</option>
    <option value="devlist">developer mailing list</option>
    <option value="phpdoc">documentation mailing list</option>
   </select>
   <input type="image" src="./PHP  fputcsv - Manual_files/small_submit_white.gif" class="submit" alt="search">
   <input type="hidden" name="lang" value="en">
  </p>
 </form>
</div>

<div id="layout_2">
 <div id="leftbar">
<!--UdmComment-->
<ul class="toc">
 <li class="header home"><a href="http://www.php.net/manual/en/index.php">PHP Manual</a></li>
 <li class="header up"><a href="http://www.php.net/manual/en/funcref.php">Function Reference</a></li>
 <li class="header up"><a href="http://www.php.net/manual/en/refs.fileprocess.file.php">File System Related Extensions</a></li>
 <li class="header up"><a href="http://www.php.net/manual/en/book.filesystem.php">Filesystem</a></li>
 <li class="header up"><a href="http://www.php.net/manual/en/ref.filesystem.php">Filesystem Functions</a></li>
 <li><a href="http://www.php.net/manual/en/function.basename.php">basename</a></li>
 <li><a href="http://www.php.net/manual/en/function.chgrp.php">chgrp</a></li>
 <li><a href="http://www.php.net/manual/en/function.chmod.php">chmod</a></li>
 <li><a href="http://www.php.net/manual/en/function.chown.php">chown</a></li>
 <li><a href="http://www.php.net/manual/en/function.clearstatcache.php">clearstatcache</a></li>
 <li><a href="http://www.php.net/manual/en/function.copy.php">copy</a></li>
 <li><a href="http://www.php.net/manual/en/function.delete.php">delete</a></li>
 <li><a href="http://www.php.net/manual/en/function.dirname.php">dirname</a></li>
 <li><a href="http://www.php.net/manual/en/function.disk-free-space.php">disk_<span class="w"> </span>free_<span class="w"> </span>space</a></li>
 <li><a href="http://www.php.net/manual/en/function.disk-total-space.php">disk_<span class="w"> </span>total_<span class="w"> </span>space</a></li>
 <li><a href="http://www.php.net/manual/en/function.diskfreespace.php">diskfreespace</a></li>
 <li><a href="http://www.php.net/manual/en/function.fclose.php">fclose</a></li>
 <li><a href="http://www.php.net/manual/en/function.feof.php">feof</a></li>
 <li><a href="http://www.php.net/manual/en/function.fflush.php">fflush</a></li>
 <li><a href="http://www.php.net/manual/en/function.fgetc.php">fgetc</a></li>
 <li><a href="http://www.php.net/manual/en/function.fgetcsv.php">fgetcsv</a></li>
 <li><a href="http://www.php.net/manual/en/function.fgets.php">fgets</a></li>
 <li><a href="http://www.php.net/manual/en/function.fgetss.php">fgetss</a></li>
 <li><a href="http://www.php.net/manual/en/function.file-exists.php">file_<span class="w"> </span>exists</a></li>
 <li><a href="http://www.php.net/manual/en/function.file-get-contents.php">file_<span class="w"> </span>get_<span class="w"> </span>contents</a></li>
 <li><a href="http://www.php.net/manual/en/function.file-put-contents.php">file_<span class="w"> </span>put_<span class="w"> </span>contents</a></li>
 <li><a href="http://www.php.net/manual/en/function.file.php">file</a></li>
 <li><a href="http://www.php.net/manual/en/function.fileatime.php">fileatime</a></li>
 <li><a href="http://www.php.net/manual/en/function.filectime.php">filectime</a></li>
 <li><a href="http://www.php.net/manual/en/function.filegroup.php">filegroup</a></li>
 <li><a href="http://www.php.net/manual/en/function.fileinode.php">fileinode</a></li>
 <li><a href="http://www.php.net/manual/en/function.filemtime.php">filemtime</a></li>
 <li><a href="http://www.php.net/manual/en/function.fileowner.php">fileowner</a></li>
 <li><a href="http://www.php.net/manual/en/function.fileperms.php">fileperms</a></li>
 <li><a href="http://www.php.net/manual/en/function.filesize.php">filesize</a></li>
 <li><a href="http://www.php.net/manual/en/function.filetype.php">filetype</a></li>
 <li><a href="http://www.php.net/manual/en/function.flock.php">flock</a></li>
 <li><a href="http://www.php.net/manual/en/function.fnmatch.php">fnmatch</a></li>
 <li><a href="http://www.php.net/manual/en/function.fopen.php">fopen</a></li>
 <li><a href="http://www.php.net/manual/en/function.fpassthru.php">fpassthru</a></li>
 <li class="active"><a href="./PHP  fputcsv - Manual_files/PHP  fputcsv - Manual.htm">fputcsv</a></li>
 <li><a href="http://www.php.net/manual/en/function.fputs.php">fputs</a></li>
 <li><a href="http://www.php.net/manual/en/function.fread.php">fread</a></li>
 <li><a href="http://www.php.net/manual/en/function.fscanf.php">fscanf</a></li>
 <li><a href="http://www.php.net/manual/en/function.fseek.php">fseek</a></li>
 <li><a href="http://www.php.net/manual/en/function.fstat.php">fstat</a></li>
 <li><a href="http://www.php.net/manual/en/function.ftell.php">ftell</a></li>
 <li><a href="http://www.php.net/manual/en/function.ftruncate.php">ftruncate</a></li>
 <li><a href="http://www.php.net/manual/en/function.fwrite.php">fwrite</a></li>
 <li><a href="http://www.php.net/manual/en/function.glob.php">glob</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-dir.php">is_<span class="w"> </span>dir</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-executable.php">is_<span class="w"> </span>executable</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-file.php">is_<span class="w"> </span>file</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-link.php">is_<span class="w"> </span>link</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-readable.php">is_<span class="w"> </span>readable</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-uploaded-file.php">is_<span class="w"> </span>uploaded_<span class="w"> </span>file</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-writable.php">is_<span class="w"> </span>writable</a></li>
 <li><a href="http://www.php.net/manual/en/function.is-writeable.php">is_<span class="w"> </span>writeable</a></li>
 <li><a href="http://www.php.net/manual/en/function.lchgrp.php">lchgrp</a></li>
 <li><a href="http://www.php.net/manual/en/function.lchown.php">lchown</a></li>
 <li><a href="http://www.php.net/manual/en/function.link.php">link</a></li>
 <li><a href="http://www.php.net/manual/en/function.linkinfo.php">linkinfo</a></li>
 <li><a href="http://www.php.net/manual/en/function.lstat.php">lstat</a></li>
 <li><a href="http://www.php.net/manual/en/function.mkdir.php">mkdir</a></li>
 <li><a href="http://www.php.net/manual/en/function.move-uploaded-file.php">move_<span class="w"> </span>uploaded_<span class="w"> </span>file</a></li>
 <li><a href="http://www.php.net/manual/en/function.parse-ini-file.php">parse_<span class="w"> </span>ini_<span class="w"> </span>file</a></li>
 <li><a href="http://www.php.net/manual/en/function.parse-ini-string.php">parse_<span class="w"> </span>ini_<span class="w"> </span>string</a></li>
 <li><a href="http://www.php.net/manual/en/function.pathinfo.php">pathinfo</a></li>
 <li><a href="http://www.php.net/manual/en/function.pclose.php">pclose</a></li>
 <li><a href="http://www.php.net/manual/en/function.popen.php">popen</a></li>
 <li><a href="http://www.php.net/manual/en/function.readfile.php">readfile</a></li>
 <li><a href="http://www.php.net/manual/en/function.readlink.php">readlink</a></li>
 <li><a href="http://www.php.net/manual/en/function.realpath_cache_get.php">realpath_<span class="w"> </span>cache_<span class="w"> </span>get</a></li>
 <li><a href="http://www.php.net/manual/en/function.realpath_cache_size.php">realpath_<span class="w"> </span>cache_<span class="w"> </span>size</a></li>
 <li><a href="http://www.php.net/manual/en/function.realpath.php">realpath</a></li>
 <li><a href="http://www.php.net/manual/en/function.rename.php">rename</a></li>
 <li><a href="http://www.php.net/manual/en/function.rewind.php">rewind</a></li>
 <li><a href="http://www.php.net/manual/en/function.rmdir.php">rmdir</a></li>
 <li><a href="http://www.php.net/manual/en/function.set-file-buffer.php">set_<span class="w"> </span>file_<span class="w"> </span>buffer</a></li>
 <li><a href="http://www.php.net/manual/en/function.stat.php">stat</a></li>
 <li><a href="http://www.php.net/manual/en/function.symlink.php">symlink</a></li>
 <li><a href="http://www.php.net/manual/en/function.tempnam.php">tempnam</a></li>
 <li><a href="http://www.php.net/manual/en/function.tmpfile.php">tmpfile</a></li>
 <li><a href="http://www.php.net/manual/en/function.touch.php">touch</a></li>
 <li><a href="http://www.php.net/manual/en/function.umask.php">umask</a></li>
 <li><a href="http://www.php.net/manual/en/function.unlink.php">unlink</a></li>
</ul><!--/UdmComment-->

 </div>
 <div id="content" class="manual/en">
<!--UdmComment-->
<div class="manualnavbar manualnavbar_top">
 <span class="next">
  <a href="http://www.php.net/manual/en/function.fputs.php">fputs<img src="./PHP  fputcsv - Manual_files/caret-r.gif" alt="&gt;" width="11" height="7"></a>
 </span>
 <span class="prev">
  <a href="http://www.php.net/manual/en/function.fpassthru.php"><img src="./PHP  fputcsv - Manual_files/caret-l.gif" alt="&lt;" width="11" height="7">fpassthru</a>
 </span>
 <hr>
 <span class="lastupdated">[<a href="https://edit.php.net/?project=PHP&perm=en/function.fputcsv.php">edit</a>] Last updated: Fri, 23 Dec 2011</span>
 <div class="langchooser">
  <form action="http://www.php.net/manual/change.php" method="get">
   <p>view this page in </p><fieldset><select name="page">
    <option value="pt_BR/function.fputcsv.php">Brazilian Portuguese</option>
    <option value="zh/function.fputcsv.php">Chinese (Simplified)</option>
    <option value="fr/function.fputcsv.php">French</option>
    <option value="de/function.fputcsv.php">German</option>
    <option value="ja/function.fputcsv.php">Japanese</option>
    <option value="pl/function.fputcsv.php">Polish</option>
    <option value="ro/function.fputcsv.php">Romanian</option>
    <option value="ru/function.fputcsv.php">Russian</option>
    <option value="fa/function.fputcsv.php">Persian</option>
    <option value="es/function.fputcsv.php">Spanish</option>
    <option value="tr/function.fputcsv.php">Turkish</option>
    <option value="help-translate.php">Other</option>
   </select>
   <input type="image" src="./PHP  fputcsv - Manual_files/small_submit.gif" id="changeLangImage" alt="Change language">
  </fieldset></form>
 </div>
</div>
<!--/UdmComment-->

<div id="function.fputcsv" class="refentry">
 <div class="refnamediv">
  <h1 class="refname">fputcsv</h1>
  <p class="verinfo">(PHP 5 &gt;= 5.1.0)</p><p class="refpurpose"><span class="refname">fputcsv</span> — <span class="dc-title">Format line as CSV and write to file pointer</span></p>

 </div>
 
 <div class="refsect1 description" id="refsect1-function.fputcsv-description"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-description">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> Description</h3>
  <div class="methodsynopsis dc-description">
   <span class="type">int</span> <span class="methodname"><b>fputcsv</b></span>
    ( <span class="methodparam"><span class="type">resource</span> <tt class="parameter">$handle</tt></span>
   , <span class="methodparam"><span class="type">array</span> <tt class="parameter">$fields</tt></span>
   [, <span class="methodparam"><span class="type">string</span> <tt class="parameter">$delimiter</tt><span class="initializer"> = ','</span></span>
   [, <span class="methodparam"><span class="type">string</span> <tt class="parameter">$enclosure</tt><span class="initializer"> = '"'</span></span>
  ]] )</div>

  <p class="para rdfs-comment">
   <span class="function"><b>fputcsv()</b></span> formats a line (passed as a
   <i><tt class="parameter">fields</tt></i> array) as CSV and write it (terminated by a
   newline) to the specified file <i><tt class="parameter">handle</tt></i>. 
  </p>
 </div>


 <div class="refsect1 parameters" id="refsect1-function.fputcsv-parameters"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-parameters">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> Parameters</h3>
  <p class="para">
   </p><dl>

    <dt>

     <span class="term"><i><tt class="parameter">handle</tt></i></span>
     </dt><dd>

      <p class="para">The file pointer must be valid, and must point to
a file successfully opened by <span class="function"><a href="http://www.php.net/manual/en/function.fopen.php" class="function">fopen()</a></span> or
<span class="function"><a href="http://www.php.net/manual/en/function.fsockopen.php" class="function">fsockopen()</a></span> (and not yet closed by
<span class="function"><a href="http://www.php.net/manual/en/function.fclose.php" class="function">fclose()</a></span>).</p>
     </dd>

    

    <dt>

     <span class="term"><i><tt class="parameter">fields</tt></i></span>
     </dt><dd>

      <p class="para">
       An array of values.
      </p>
     </dd>

    

    <dt>

     <span class="term"><i><tt class="parameter">delimiter</tt></i></span>
     </dt><dd>

      <p class="para">
       The optional <i><tt class="parameter">delimiter</tt></i> parameter sets the field
       delimiter (one character only).
      </p>
     </dd>

    

    <dt>

     <span class="term"><i><tt class="parameter">enclosure</tt></i></span>
     </dt><dd>

      <p class="para">
       The optional <i><tt class="parameter">enclosure</tt></i> parameter sets the field
       enclosure (one character only).
      </p>
     </dd>

    

   </dl>

  <p></p>
 </div>


 <div class="refsect1 returnvalues" id="refsect1-function.fputcsv-returnvalues"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-returnvalues">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> Return Values</h3>
  <p class="para">
   Returns the length of the written string or <b><tt>FALSE</tt></b> on failure.
  </p>
 </div>


 <div class="refsect1 examples" id="refsect1-function.fputcsv-examples"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-examples">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> Examples</h3>
  <p class="para">
   </p><div class="example" id="example-2121">
    <p><b>Example #1 <span class="function"><b>fputcsv()</b></span> example</b></p>
    <div class="example-contents">
<div class="phpcode"><code><span style="color: #000000">
<span style="color: #0000BB">&lt;?php<br><br>$list&nbsp;</span><span style="color: #007700">=&nbsp;array&nbsp;(<br>&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'aaa'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'bbb'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'ccc'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'dddd'</span><span style="color: #007700">),<br>&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'123'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'456'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'789'</span><span style="color: #007700">),<br>&nbsp;&nbsp;&nbsp;&nbsp;array(</span><span style="color: #DD0000">'"aaa"'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'"bbb"'</span><span style="color: #007700">)<br>);<br><br></span><span style="color: #0000BB">$fp&nbsp;</span><span style="color: #007700">=&nbsp;</span><span style="color: #0000BB">fopen</span><span style="color: #007700">(</span><span style="color: #DD0000">'file.csv'</span><span style="color: #007700">,&nbsp;</span><span style="color: #DD0000">'w'</span><span style="color: #007700">);<br><br>foreach&nbsp;(</span><span style="color: #0000BB">$list&nbsp;</span><span style="color: #007700">as&nbsp;</span><span style="color: #0000BB">$fields</span><span style="color: #007700">)&nbsp;{<br>&nbsp;&nbsp;&nbsp;&nbsp;</span><span style="color: #0000BB">fputcsv</span><span style="color: #007700">(</span><span style="color: #0000BB">$fp</span><span style="color: #007700">,&nbsp;</span><span style="color: #0000BB">$fields</span><span style="color: #007700">);<br>}<br><br></span><span style="color: #0000BB">fclose</span><span style="color: #007700">(</span><span style="color: #0000BB">$fp</span><span style="color: #007700">);<br></span><span style="color: #0000BB">?&gt;</span>
</span>
</code></div>
    </div>

    <div class="example-contents"><p>The above example will write the following to <i>file.csv</i>:</p></div>
    <div class="example-contents screen">
<div class="cdata"><pre>aaa,bbb,ccc,dddd
123,456,789
"""aaa""","""bbb"""

</pre></div>
    </div>
   </div>
  <p></p>
 </div>


 <div class="refsect1 notes" id="refsect1-function.fputcsv-notes"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-notes">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> Notes</h3>
  <blockquote class="note"><p><b class="note">Note</b>: <span class="simpara">If PHP is not properly recognizing
the line endings when reading files either on or created by a Macintosh
computer, enabling the
<a href="http://www.php.net/manual/en/filesystem.configuration.php#ini.auto-detect-line-endings" class="link">auto_detect_line_endings</a>
run-time configuration option may help resolve the problem.</span></p></blockquote>
 </div>


 <div class="refsect1 seealso" id="refsect1-function.fputcsv-seealso"><div class="reportbug"><a href="https://bugs.php.net/report.php?bug_type=Documentation+problem&manpage=function.fputcsv%23refsect1-function.fputcsv-seealso">Report a bug</a></div>
  <h3 class="title"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> See Also</h3>
  <p class="para">
   </p><ul class="simplelist">
    <li class="member"><span class="function"><a href="http://www.php.net/manual/en/function.fgetcsv.php" class="function" rel="rdfs-seeAlso">fgetcsv()</a> - Gets line from file pointer and parse for CSV fields</span></li>
   </ul>
  <p></p>
 </div>


</div><br><br><!--UdmComment-->
<div class="manualnavbar manualnavbar_bottom">
 <span class="next">
  <a href="http://www.php.net/manual/en/function.fputs.php">fputs<img src="./PHP  fputcsv - Manual_files/caret-r.gif" alt="&gt;" width="11" height="7"></a>
 </span>
 <span class="prev">
  <a href="http://www.php.net/manual/en/function.fpassthru.php"><img src="./PHP  fputcsv - Manual_files/caret-l.gif" alt="&lt;" width="11" height="7">fpassthru</a>
 </span>
 <hr>
 <span class="lastupdated">[<a href="https://edit.php.net/?project=PHP&perm=en/function.fputcsv.php">edit</a>] Last updated: Fri, 23 Dec 2011</span>
 <div class="langchooser">
  &nbsp;
 </div>
</div>
<!--/UdmComment-->


<div id="usernotes">
 <div class="head"><a class="toggler shown" href="http://www.php.net/manual/en/function.fputcsv.php#"><img src="./PHP  fputcsv - Manual_files/notes-reject.gif" alt="reject note"></a> 
  <span class="action"><a href="http://www.php.net/manual/add-note.php?sect=function.fputcsv&redirect=http://www.php.net/manual/en/function.fputcsv.php"><img src="./PHP  fputcsv - Manual_files/notes-add.gif" alt="add a note" width="13" height="13" class="middle"></a> <small><a href="http://www.php.net/manual/add-note.php?sect=function.fputcsv&redirect=http://www.php.net/manual/en/function.fputcsv.php">add a note</a></small></span>
  <small>User Contributed Notes</small>
  <strong>fputcsv</strong>
 </div><div id="allnotes">
 <a name="106583"></a>
 <div class="note">
  <strong class="user">David Thomas</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#106583" class="date">21-Nov-2011 02:17</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Output XML string as CSV with first row as column headers:<br>
<br>
<span class="default">&lt;?php<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// In this case XML is <br>
&nbsp;&nbsp;&nbsp; // &lt;records&gt;<br>
&nbsp;&nbsp;&nbsp; //&nbsp; &lt;record&gt;...&lt;/record&gt;<br>
&nbsp;&nbsp;&nbsp; //&nbsp; &lt;record&gt;...&lt;/record&gt;<br>
&nbsp;&nbsp;&nbsp; // &lt;/records&gt;<br>
<br>
&nbsp; </span><span class="keyword">if(</span><span class="default">$xml </span><span class="keyword">= </span><span class="default">simplexml_load_string</span><span class="keyword">(</span><span class="default">$string</span><span class="keyword">)){<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Keep up to 12MB in memory, if becomes bigger write to temp file<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$file </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://temp/maxmemory:'</span><span class="keyword">. (</span><span class="default">12</span><span class="keyword">*</span><span class="default">1024</span><span class="keyword">*</span><span class="default">1024</span><span class="keyword">), </span><span class="string">'r+'</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; if(</span><span class="default">$row </span><span class="keyword">= </span><span class="default">get_object_vars</span><span class="keyword">(</span><span class="default">$xml</span><span class="keyword">-&gt;</span><span class="default">record</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">])){ </span><span class="comment">// First record<br>
&nbsp;&nbsp; &nbsp;&nbsp; // First row contains column header values<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="keyword">foreach(</span><span class="default">$row </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$value</span><span class="keyword">){<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$header</span><span class="keyword">[] = </span><span class="default">$key</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$file</span><span class="keyword">, </span><span class="default">$header</span><span class="keyword">,</span><span class="string">','</span><span class="keyword">,</span><span class="string">'"'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp;&nbsp; foreach (</span><span class="default">$xml</span><span class="keyword">-&gt;</span><span class="default">record </span><span class="keyword">as </span><span class="default">$record</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$file</span><span class="keyword">, </span><span class="default">get_object_vars</span><span class="keyword">(</span><span class="default">$record</span><span class="keyword">),</span><span class="string">','</span><span class="keyword">,</span><span class="string">'"'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$file</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">= </span><span class="default">stream_get_contents</span><span class="keyword">(</span><span class="default">$file</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$file</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp;&nbsp; return </span><span class="default">$output</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }else{<br>
&nbsp;&nbsp; &nbsp;&nbsp; return </span><span class="string">''</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; }<br>
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="105110"></a>
 <div class="note">
  <strong class="user">Ovidiu Curcan</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#105110" class="date">28-Jul-2011 10:48</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Unexpected (to me) behaviour: the enclosure characters inside the strings are doubled *unless* they're preceded by a backslash. If the enclosure is preceded by a backslash it's considered to be already escaped.<br>
<br>
<span class="default">&lt;?php<br>
<br>
$data </span><span class="keyword">= array(<br>
&nbsp;&nbsp;&nbsp; </span><span class="string">'Doubled: -&gt; " &lt;-'</span><span class="keyword">,<br>
&nbsp;&nbsp;&nbsp; </span><span class="string">'NOT doubled: -&gt; \" &lt;-'</span><span class="keyword">,<br>
);<br>
<br>
</span><span class="default">$buffer </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://temp'</span><span class="keyword">, </span><span class="string">'r+'</span><span class="keyword">);<br>
</span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$buffer</span><span class="keyword">, </span><span class="default">$data</span><span class="keyword">);<br>
</span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$buffer</span><span class="keyword">);<br>
</span><span class="default">$csv </span><span class="keyword">= </span><span class="default">fgets</span><span class="keyword">(</span><span class="default">$buffer</span><span class="keyword">);<br>
</span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$buffer</span><span class="keyword">);<br>
<br>
echo </span><span class="default">$csv</span><span class="keyword">; </span><span class="comment">// "Doubled: -&gt; "" &lt;-","NOT doubled: -&gt; \" &lt;-"<br>
<br>
</span><span class="default">?&gt;<br>
</span><br>
As a result, the CSV file generated by my application was not correctly opened by OpenOffice.org. The offending row and all the subsequent rows were missing from the spreadsheet.<br>
<br>
PHP: 5.3.2-1ubuntu4.9<br>
OpenOffice.org: 3.2.0</span>
</code></div>
  </div>
 </div>
 <a name="104980"></a>
 <div class="note">
  <strong class="user">jamie at agentdesign dot co dot uk</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#104980" class="date">20-Jul-2011 01:05</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Utility function to output a mysql query to csv with the option to write to file or send back to the browser as a csv attachment.<br>
<br>
<span class="default">&lt;?php<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">function </span><span class="default">query_to_csv</span><span class="keyword">(</span><span class="default">$db_conn</span><span class="keyword">, </span><span class="default">$query</span><span class="keyword">, </span><span class="default">$filename</span><span class="keyword">, </span><span class="default">$attachment </span><span class="keyword">= </span><span class="default">false</span><span class="keyword">, </span><span class="default">$headers </span><span class="keyword">= </span><span class="default">true</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if(</span><span class="default">$attachment</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// send response headers to the browser<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">header</span><span class="keyword">( </span><span class="string">'Content-Type: text/csv' </span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">header</span><span class="keyword">( </span><span class="string">'Content-Disposition: attachment;filename='</span><span class="keyword">.</span><span class="default">$filename</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://output'</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="default">$filename</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$result </span><span class="keyword">= </span><span class="default">mysql_query</span><span class="keyword">(</span><span class="default">$query</span><span class="keyword">, </span><span class="default">$db_conn</span><span class="keyword">) or die( </span><span class="default">mysql_error</span><span class="keyword">( </span><span class="default">$db_conn </span><span class="keyword">) );<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if(</span><span class="default">$headers</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// output header row (if at least one row exists)<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$row </span><span class="keyword">= </span><span class="default">mysql_fetch_assoc</span><span class="keyword">(</span><span class="default">$result</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if(</span><span class="default">$row</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">array_keys</span><span class="keyword">(</span><span class="default">$row</span><span class="keyword">));<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// reset pointer back to beginning<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">mysql_data_seek</span><span class="keyword">(</span><span class="default">$result</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; while(</span><span class="default">$row </span><span class="keyword">= </span><span class="default">mysql_fetch_assoc</span><span class="keyword">(</span><span class="default">$result</span><span class="keyword">)) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$row</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Using the function<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$sql </span><span class="keyword">= </span><span class="string">"SELECT * FROM table"</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// $db_conn should be a valid db handle<br>
<br>
&nbsp;&nbsp;&nbsp; // output as an attachment<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">query_to_csv</span><span class="keyword">(</span><span class="default">$db_conn</span><span class="keyword">, </span><span class="default">$sql</span><span class="keyword">, </span><span class="string">"test.csv"</span><span class="keyword">, </span><span class="default">true</span><span class="keyword">);<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// output to file system<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">query_to_csv</span><span class="keyword">(</span><span class="default">$db_conn</span><span class="keyword">, </span><span class="default">$sql</span><span class="keyword">, </span><span class="string">"test.csv"</span><span class="keyword">, </span><span class="default">false</span><span class="keyword">);<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="103987"></a>
 <div class="note">
  <strong class="user">Christine K - crimson at technologist dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#103987" class="date">16-May-2011 02:09</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
These two handy functions allow you to use fgetcsv with a string instead of a file handle and fputcsv to convert an array to a string instead of writing to a file handle. Hopefully this functionality will exist natively soon. Props to prior notes on these functions that led me to these.<br>
<span class="default">&lt;?php<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">function </span><span class="default">array_to_CSV</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$outstream </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">"php://temp"</span><span class="keyword">, </span><span class="string">'r+'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$outstream</span><span class="keyword">, </span><span class="default">$data</span><span class="keyword">, </span><span class="string">','</span><span class="keyword">, </span><span class="string">'"'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$outstream</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csv </span><span class="keyword">= </span><span class="default">fgets</span><span class="keyword">(</span><span class="default">$outstream</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$outstream</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">$csv</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp;&nbsp; function </span><span class="default">CSV_to_array</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$instream </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">"php://temp"</span><span class="keyword">, </span><span class="string">'r+'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$instream</span><span class="keyword">, </span><span class="default">$data</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$instream</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csv </span><span class="keyword">= </span><span class="default">fgetcsv</span><span class="keyword">(</span><span class="default">$instream</span><span class="keyword">, </span><span class="default">9999999</span><span class="keyword">, </span><span class="string">','</span><span class="keyword">, </span><span class="string">'"'</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$instream</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; return(</span><span class="default">$csv</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; }<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="100033"></a>
 <div class="note">
  <strong class="user">Guile</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#100033" class="date">21-Sep-2010 10:32</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Here is a way to send csv like echo does :<br>
<span class="default">&lt;?php<br>
</span><span class="keyword">function </span><span class="default">outputCSV</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">) {<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$outstream </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">"php://output"</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
<br>
&nbsp;&nbsp;&nbsp; function </span><span class="default">__outputCSV</span><span class="keyword">(&amp;</span><span class="default">$vals</span><span class="keyword">, </span><span class="default">$key</span><span class="keyword">, </span><span class="default">$filehandler</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$filehandler</span><span class="keyword">, </span><span class="default">$vals</span><span class="keyword">, </span><span class="string">';'</span><span class="keyword">, </span><span class="string">'"'</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">array_walk</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">, </span><span class="string">'__outputCSV'</span><span class="keyword">, </span><span class="default">$outstream</span><span class="keyword">);<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$outstream</span><span class="keyword">);<br>
}<br>
<br>
</span><span class="default">$mydata </span><span class="keyword">= array(<br>
&nbsp;array(</span><span class="string">'data11'</span><span class="keyword">, </span><span class="string">'data12'</span><span class="keyword">, </span><span class="string">'data13'</span><span class="keyword">),<br>
&nbsp;array(</span><span class="string">'data21'</span><span class="keyword">, </span><span class="string">'data22'</span><span class="keyword">, </span><span class="string">'data23'</span><span class="keyword">),<br>
&nbsp;array(</span><span class="string">'data31'</span><span class="keyword">, </span><span class="string">'data32'</span><span class="keyword">, </span><span class="string">'data23'</span><span class="keyword">));<br>
<br>
</span><span class="default">outputCSV</span><span class="keyword">(</span><span class="default">$mydata</span><span class="keyword">);<br>
</span><span class="comment">/* Output sent :<br>
data11;data12;data13<br>
data21;data22;data23<br>
data31;data32;data23<br>
*/<br>
</span><span class="default">?&gt;<br>
</span><br>
Moreover, this can be nicer with PHP5.3+ closures</span>
</code></div>
  </div>
 </div>
 <a name="96937"></a>
 <div class="note">
  <strong class="user">simeonl at dbc dot co dot nz</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#96937" class="date">24-Mar-2010 04:24</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
In general I found myself wanting to get the result as a string rather than writing it to a file, and in particular I wanted to produce a CSV using an EOL that might not be the same as that on the server where I generated it.&nbsp; This is how I solved the problem without rewriting&nbsp; fputcsv.<br>
<br>
<span class="default">&lt;?php<br>
</span><span class="keyword">function </span><span class="default">sputcsv</span><span class="keyword">(</span><span class="default">$row</span><span class="keyword">, </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">','</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="string">'"'</span><span class="keyword">, </span><span class="default">$eol </span><span class="keyword">= </span><span class="string">"\n"</span><span class="keyword">)<br>
{<br>
&nbsp;&nbsp;&nbsp; static </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">false</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; if (</span><span class="default">$fp </span><span class="keyword">=== </span><span class="default">false</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://temp'</span><span class="keyword">, </span><span class="string">'r+'</span><span class="keyword">); </span><span class="comment">// see <a href="http://php.net/manual/en/wrappers.php.php" rel="nofollow" target="_blank">http://php.net/manual/en/wrappers.php.php</a> - yes there are 2 '.php's on the end.<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; // NB: anything you read/write to/from 'php://temp' is specific to this filehandle<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">}<br>
&nbsp;&nbsp;&nbsp; else<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; if (</span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$row</span><span class="keyword">, </span><span class="default">$delimiter</span><span class="keyword">, </span><span class="default">$enclosure</span><span class="keyword">) === </span><span class="default">false</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; </span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$csv </span><span class="keyword">= </span><span class="default">fgets</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; if (</span><span class="default">$eol </span><span class="keyword">!= </span><span class="default">PHP_EOL</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csv </span><span class="keyword">= </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$csv</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, (</span><span class="default">0 </span><span class="keyword">- </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">PHP_EOL</span><span class="keyword">))) . </span><span class="default">$eol</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; return </span><span class="default">$csv</span><span class="keyword">;<br>
}<br>
<br>
</span><span class="comment">// test<br>
</span><span class="default">$rows </span><span class="keyword">= array<br>
(<br>
&nbsp;&nbsp;&nbsp; array(</span><span class="string">'blue, sky'</span><span class="keyword">, </span><span class="string">'green, lime'</span><span class="keyword">, </span><span class="string">'red'</span><span class="keyword">, </span><span class="string">'black'</span><span class="keyword">),<br>
&nbsp;&nbsp;&nbsp; array(</span><span class="string">'white'</span><span class="keyword">, </span><span class="string">'gold'</span><span class="keyword">, </span><span class="string">'purple, imperial'</span><span class="keyword">, </span><span class="string">'grey, slate'</span><span class="keyword">),<br>
&nbsp;&nbsp;&nbsp; array(</span><span class="string">'orange, burnt'</span><span class="keyword">, </span><span class="string">'pink, hot'</span><span class="keyword">, </span><span class="string">'violet'</span><span class="keyword">, </span><span class="string">'indigo'</span><span class="keyword">),<br>
);<br>
<br>
if (</span><span class="default">PHP_EOL </span><span class="keyword">== </span><span class="string">"\r\n"</span><span class="keyword">)<br>
{<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$eol </span><span class="keyword">= </span><span class="string">"\n"</span><span class="keyword">;<br>
}<br>
else<br>
{<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$eol </span><span class="keyword">= </span><span class="string">"\r\n"</span><span class="keyword">;<br>
}<br>
<br>
foreach(</span><span class="default">$rows </span><span class="keyword">as </span><span class="default">$row</span><span class="keyword">)<br>
{<br>
&nbsp;&nbsp;&nbsp; echo </span><span class="default">nl2br</span><span class="keyword">(</span><span class="default">sputcsv</span><span class="keyword">(</span><span class="default">$row</span><span class="keyword">, </span><span class="string">','</span><span class="keyword">, </span><span class="string">'"'</span><span class="keyword">, </span><span class="default">$eol</span><span class="keyword">));<br>
}<br>
</span><span class="default">?&gt;<br>
</span><br>
The test should produce something like the following:<br>
<br>
"blue, sky","green, lime",red,black<br>
white,gold,"purple, imperial","grey, slate"<br>
"orange, burnt","pink, hot",violet,indigo</span>
</code></div>
  </div>
 </div>
 <a name="96833"></a>
 <div class="note">
  <strong class="user">khishigbaatar at 2xcoding dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#96833" class="date">18-Mar-2010 08:24</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Use '&amp;quot;' instead of '"' in enclosure. <br>
<br>
Below example's result is better than the Example#1. <br>
<br>
<span class="default">&lt;?php<br>
<br>
$list </span><span class="keyword">= array (<br>
&nbsp;&nbsp;&nbsp; </span><span class="string">'aaa,bbb,ccc,dddd'</span><span class="keyword">,<br>
&nbsp;&nbsp;&nbsp; </span><span class="string">'123,456,789'</span><span class="keyword">,<br>
&nbsp;&nbsp;&nbsp; </span><span class="string">'"aaa","bbb"'<br>
</span><span class="keyword">);<br>
<br>
</span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'file.csv'</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
<br>
foreach (</span><span class="default">$list </span><span class="keyword">as </span><span class="default">$line</span><span class="keyword">) {<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">split</span><span class="keyword">(</span><span class="string">','</span><span class="keyword">, </span><span class="default">$line</span><span class="keyword">), </span><span class="string">','</span><span class="keyword">, </span><span class="string">'&amp;quot;'</span><span class="keyword">);<br>
}<br>
<br>
</span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="94088"></a>
 <div class="note">
  <strong class="user">ben at NOSPAMdcphp dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#94088" class="date">15-Oct-2009 05:02</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
If you're looking to output an Excel format (.xls) file, consider using PEAR's Spreadsheet_Excel_Writer instead:
<br>

<br>
<a href="http://pear.php.net/manual/en/package.fileformats.spreadsheet-excel-writer.intro.php" rel="nofollow" target="_blank">http://pear.php.net/manual/en/package.fileformats.spreadsheet-excel-writer.intro.php</a></span>
</code></div>
  </div>
 </div>
 <a name="91922"></a>
 <div class="note">
  <strong class="user">Jason</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#91922" class="date">01-Jul-2009 06:47</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
To get the mssafe_csv function below to work using PHP5, I had to change line 50 from:<br>
fputcsv($fp, $line);<br>
<br>
to:<br>
fputcsv($fp, split(',', $line));<br>
<br>
Otherwise works great! Thanks for the function.</span>
</code></div>
  </div>
 </div>
 <a name="91473"></a>
 <div class="note">
  <strong class="user">alex /-\-l- windeagle DOT org</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#91473" class="date">11-Jun-2009 03:41</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
TAB delimiting.<br>
<br>
Using fputcsv to output a CSV with a tab delimiter is a little tricky since the delimiter field only takes one character.<br>
The answer is to use the chr() function.&nbsp; The ascii code for tab is 9, so chr(9) returns a tab character.<br>
<br>
<span class="default">&lt;?php<br>
&nbsp;&nbsp;&nbsp; fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="string">'\t'</span><span class="keyword">);&nbsp; &nbsp; &nbsp; </span><span class="comment">//won't work<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="string">'&nbsp; &nbsp; '</span><span class="keyword">);&nbsp; &nbsp; </span><span class="comment">//won't work<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="default">chr</span><span class="keyword">(</span><span class="default">9</span><span class="keyword">));&nbsp; &nbsp; </span><span class="comment">//works<br>
</span><span class="default">?&gt;<br>
</span><br>
==================<br>
<br>
it should be:<br>
<span class="default">&lt;?php<br>
&nbsp;&nbsp;&nbsp; fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="string">"\t"</span><span class="keyword">);<br>
</span><span class="default">?&gt;<br>
</span>you just forgot that single quotes are literal...meaning whatever you put there that's what will come out so '\t' would be same as 't' because \ in that case would be only used for escaping but if you use double quotes then that would work.</span>
</code></div>
  </div>
 </div>
 <a name="91026"></a>
 <div class="note">
  <strong class="user">sam at nospamthankstolton dot co dot uk</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#91026" class="date">21-May-2009 10:43</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
TAB delimiting.<br>
<br>
Using fputcsv to output a CSV with a tab delimiter is a little tricky since the delimiter field only takes one character.<br>
The answer is to use the chr() function.&nbsp; The ascii code for tab is 9, so chr(9) returns a tab character.<br>
<br>
<span class="default">&lt;?php<br>
&nbsp;&nbsp;&nbsp; fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="string">'\t'</span><span class="keyword">);&nbsp; &nbsp; &nbsp; </span><span class="comment">//won't work<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="string">'&nbsp; &nbsp; '</span><span class="keyword">);&nbsp; &nbsp; </span><span class="comment">//won't work<br>
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$foo</span><span class="keyword">, </span><span class="default">chr</span><span class="keyword">(</span><span class="default">9</span><span class="keyword">));&nbsp; &nbsp; </span><span class="comment">//works<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="90883"></a>
 <div class="note">
  <strong class="user">soapergem at gmail dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#90883" class="date">14-May-2009 03:17</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
I've created a function for quickly generating CSV files that work with Microsoft applications. In the field I learned a few things about generating CSVs that are not always obvious. First, since PHP is generally *nix-based, it makes sense that the line endings are always \n instead of \r\n. However, certain Microsoft programs (I'm looking at you, Access 97), will fail to recognize the CSV properly unless each line ends with \r\n. So this function changes the line endings accordingly. Secondly, if the first column heading / value of the CSV file begins with uppercase ID, certain Microsoft programs (ahem, Excel 2007) will interpret the file as being in the SYLK format rather than CSV, as described here: <a href="http://support.microsoft.com/kb/323626" rel="nofollow" target="_blank">http://support.microsoft.com/kb/323626</a>
<br>

<br>
This function accommodates for that as well, by forcibly enclosing that first value in quotes (when this doesn't occur automatically). It would be fairly simple to modify this function to use another delimiter if need be and I leave that as an exercise to the reader. So quite simply, this function is used for outputting CSV data to a CSV file in a way that is safe for use with Windows applications. It takes two parameters + one optional parameter: the location of where the file should be saved, an array of data rows, and an optional array of column headings. (Technically you could omit the headings array and just include it as the first row of the data, but it is often useful to keep this data stored in different arrays in practice.)
<br>

<br>
<span class="default">&lt;?php
<br>

<br>
</span><span class="keyword">function </span><span class="default">mssafe_csv</span><span class="keyword">(</span><span class="default">$filepath</span><span class="keyword">, </span><span class="default">$data</span><span class="keyword">, </span><span class="default">$header </span><span class="keyword">= array())
<br>
{
<br>
&nbsp;&nbsp;&nbsp; if ( </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="default">$filepath</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$show_header </span><span class="keyword">= </span><span class="default">true</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if ( empty(</span><span class="default">$header</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$show_header </span><span class="keyword">= </span><span class="default">false</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">reset</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$line </span><span class="keyword">= </span><span class="default">current</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if ( !empty(</span><span class="default">$line</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">reset</span><span class="keyword">(</span><span class="default">$line</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$first </span><span class="keyword">= </span><span class="default">current</span><span class="keyword">(</span><span class="default">$line</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if ( </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$first</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, </span><span class="default">2</span><span class="keyword">) == </span><span class="string">'ID' </span><span class="keyword">&amp;&amp; !</span><span class="default">preg_match</span><span class="keyword">(</span><span class="string">'/["\\s,]/'</span><span class="keyword">, </span><span class="default">$first</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">array_shift</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">array_shift</span><span class="keyword">(</span><span class="default">$line</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if ( empty(</span><span class="default">$line</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\"{$first}\"\r\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } else {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\"{$first}\","</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$line</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fseek</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, -</span><span class="default">1</span><span class="keyword">, </span><span class="default">SEEK_CUR</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\r\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; } else {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">reset</span><span class="keyword">(</span><span class="default">$header</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$first </span><span class="keyword">= </span><span class="default">current</span><span class="keyword">(</span><span class="default">$header</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if ( </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$first</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, </span><span class="default">2</span><span class="keyword">) == </span><span class="string">'ID' </span><span class="keyword">&amp;&amp; !</span><span class="default">preg_match</span><span class="keyword">(</span><span class="string">'/["\\s,]/'</span><span class="keyword">, </span><span class="default">$first</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">array_shift</span><span class="keyword">(</span><span class="default">$header</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if ( empty(</span><span class="default">$header</span><span class="keyword">) ) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$show_header </span><span class="keyword">= </span><span class="default">false</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\"{$first}\"\r\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } else {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\"{$first}\","</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if ( </span><span class="default">$show_header </span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$header</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fseek</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, -</span><span class="default">1</span><span class="keyword">, </span><span class="default">SEEK_CUR</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\r\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; foreach ( </span><span class="default">$data </span><span class="keyword">as </span><span class="default">$line </span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$line</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fseek</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, -</span><span class="default">1</span><span class="keyword">, </span><span class="default">SEEK_CUR</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="string">"\r\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);
<br>
&nbsp;&nbsp;&nbsp; } else {
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;
<br>
&nbsp;&nbsp;&nbsp; }
<br>
&nbsp;&nbsp;&nbsp; return </span><span class="default">true</span><span class="keyword">;
<br>
}
<br>

<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="87120"></a>
 <div class="note">
  <strong class="user">nate at example dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#87120" class="date">20-Nov-2008 06:17</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Alright, after playing a while, I'm confident the following replacement function works in all cases, including the ones for which the native fputcsv function fails. If fputcsv fails to work for you (particularly with mysql csv imports), try this function as a drop-in replacement instead.
<br>

<br>
Arguments to pass in are exactly the same as for fputcsv, though I have added an additional $mysql_null boolean which allows one to turn php null's into mysql-insertable nulls (by default, this add-on is disabled, thus working identically to fputcsv [except this one works!]).
<br>

<br>
<span class="default">&lt;?php
<br>

<br>
</span><span class="keyword">function </span><span class="default">fputcsv2 </span><span class="keyword">(</span><span class="default">$fh</span><span class="keyword">, array </span><span class="default">$fields</span><span class="keyword">, </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">','</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="string">'"'</span><span class="keyword">, </span><span class="default">$mysql_null </span><span class="keyword">= </span><span class="default">false</span><span class="keyword">) {
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$delimiter_esc </span><span class="keyword">= </span><span class="default">preg_quote</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">, </span><span class="string">'/'</span><span class="keyword">);
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$enclosure_esc </span><span class="keyword">= </span><span class="default">preg_quote</span><span class="keyword">(</span><span class="default">$enclosure</span><span class="keyword">, </span><span class="string">'/'</span><span class="keyword">);
<br>

<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">= array();
<br>
&nbsp;&nbsp;&nbsp; foreach (</span><span class="default">$fields </span><span class="keyword">as </span><span class="default">$field</span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if (</span><span class="default">$field </span><span class="keyword">=== </span><span class="default">null </span><span class="keyword">&amp;&amp; </span><span class="default">$mysql_null</span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output</span><span class="keyword">[] = </span><span class="string">'NULL'</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; continue;
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }
<br>

<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output</span><span class="keyword">[] = </span><span class="default">preg_match</span><span class="keyword">(</span><span class="string">"/(?:${delimiter_esc}|${enclosure_esc}|\s)/"</span><span class="keyword">, </span><span class="default">$field</span><span class="keyword">) ? (
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$enclosure </span><span class="keyword">. </span><span class="default">str_replace</span><span class="keyword">(</span><span class="default">$enclosure</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">. </span><span class="default">$enclosure</span><span class="keyword">, </span><span class="default">$field</span><span class="keyword">) . </span><span class="default">$enclosure
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="keyword">) : </span><span class="default">$field</span><span class="keyword">;
<br>
&nbsp;&nbsp;&nbsp; }
<br>

<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fh</span><span class="keyword">, </span><span class="default">join</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">, </span><span class="default">$output</span><span class="keyword">) . </span><span class="string">"\n"</span><span class="keyword">);
<br>
}
<br>

<br>
</span><span class="comment">// the _EXACT_ LOAD DATA INFILE command to use
<br>
// (if you pass in something different for $delimiter
<br>
// and/or $enclosure above, change them here too;
<br>
// but _LEAVE ESCAPED BY EMPTY!_).
<br>
/*
<br>
LOAD DATA INFILE
<br>
&nbsp;&nbsp;&nbsp; '/path/to/file.csv'
<br>

<br>
INTO TABLE
<br>
&nbsp;&nbsp;&nbsp; my_table
<br>

<br>
FIELDS TERMINATED BY
<br>
&nbsp;&nbsp;&nbsp; ','
<br>

<br>
OPTIONALLY ENCLOSED BY
<br>
&nbsp;&nbsp;&nbsp; '"'
<br>

<br>
ESCAPED BY
<br>
&nbsp;&nbsp;&nbsp; ''
<br>

<br>
LINES TERMINATED BY
<br>
&nbsp;&nbsp;&nbsp; '\n'
<br>
*/
<br>

<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="84783"></a>
 <div class="note">
  <strong class="user">jon+dontspamme at phpsitesolutions dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#84783" class="date">30-Jul-2008 05:44</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
I found that the fputcsv examples for PHP 4 missed one thing, that was proper handling of the $enclosure value when it is a quote (if a quote is passed in a field, and it is delimited by a slash, it will be improperly handled by the functions submitted here).<br>
<br>
My modified function was built using the actual PHP5 source for fputcsv, with the addition of properly reacting to the existence of a delimited quote in the field being processed.<br>
<br>
<span class="default">&lt;?php<br>
</span><span class="keyword">if (!</span><span class="default">function_exists</span><span class="keyword">(</span><span class="string">'fputcsv'</span><span class="keyword">)) {<br>
&nbsp;&nbsp;&nbsp; function </span><span class="default">fputcsv</span><span class="keyword">(&amp;</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$fields </span><span class="keyword">= array(), </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">','</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="string">'"'</span><span class="keyword">) {<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Sanity Check<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="keyword">if (!</span><span class="default">is_resource</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">)) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'fputcsv() expects parameter 1 to be resource, ' </span><span class="keyword">.<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">gettype</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">) . </span><span class="string">' given'</span><span class="keyword">, </span><span class="default">E_USER_WARNING</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if (</span><span class="default">$delimiter</span><span class="keyword">!=</span><span class="default">NULL</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if( </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">) &lt; </span><span class="default">1 </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'delimiter must be a character'</span><span class="keyword">, </span><span class="default">E_USER_WARNING</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }elseif( </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">) &gt; </span><span class="default">1 </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'delimiter must be a single character'</span><span class="keyword">, </span><span class="default">E_USER_NOTICE</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">/* use first character from string */<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="default">$delimiter</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">];<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; if( </span><span class="default">$enclosure</span><span class="keyword">!=</span><span class="default">NULL </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; if( </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$enclosure</span><span class="keyword">) &lt; </span><span class="default">1 </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'enclosure must be a character'</span><span class="keyword">, </span><span class="default">E_USER_WARNING</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }elseif( </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$enclosure</span><span class="keyword">) &gt; </span><span class="default">1 </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'enclosure must be a single character'</span><span class="keyword">, </span><span class="default">E_USER_NOTICE</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">/* use first character from string */<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="default">$enclosure</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">];<br>
&nbsp;&nbsp; &nbsp; &nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$i </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">= </span><span class="string">''</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escape_char </span><span class="keyword">= </span><span class="string">'\\'</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$field_cnt </span><span class="keyword">= </span><span class="default">count</span><span class="keyword">(</span><span class="default">$fields</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$enc_is_quote </span><span class="keyword">= </span><span class="default">in_array</span><span class="keyword">(</span><span class="default">$enclosure</span><span class="keyword">, array(</span><span class="string">'"'</span><span class="keyword">,</span><span class="string">"'"</span><span class="keyword">));<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">reset</span><span class="keyword">(</span><span class="default">$fields</span><span class="keyword">);<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; foreach( </span><span class="default">$fields </span><span class="keyword">AS </span><span class="default">$field </span><span class="keyword">) {<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">/* enclose a field that contains a delimiter, an enclosure character, or a newline */<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="keyword">if( </span><span class="default">is_string</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">) &amp;&amp; ( <br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="default">$delimiter</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="default">$enclosure</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="default">$escape_char</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="string">"\n"</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="string">"\r"</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="string">"\t"</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">, </span><span class="string">' '</span><span class="keyword">)!==</span><span class="default">false </span><span class="keyword">) ) {<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$field_len </span><span class="keyword">= </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$field</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; for( </span><span class="default">$ch </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">; </span><span class="default">$ch </span><span class="keyword">&lt; </span><span class="default">$field_len</span><span class="keyword">; </span><span class="default">$ch</span><span class="keyword">++ )&nbsp; &nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if( </span><span class="default">$field</span><span class="keyword">[</span><span class="default">$ch</span><span class="keyword">] == </span><span class="default">$escape_char </span><span class="keyword">&amp;&amp; </span><span class="default">$field</span><span class="keyword">[</span><span class="default">$ch</span><span class="keyword">+</span><span class="default">1</span><span class="keyword">] == </span><span class="default">$enclosure </span><span class="keyword">&amp;&amp; </span><span class="default">$enc_is_quote </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; continue;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }elseif( </span><span class="default">$field</span><span class="keyword">[</span><span class="default">$ch</span><span class="keyword">] == </span><span class="default">$escape_char </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">1</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }elseif( !</span><span class="default">$escaped </span><span class="keyword">&amp;&amp; </span><span class="default">$field</span><span class="keyword">[</span><span class="default">$ch</span><span class="keyword">] == </span><span class="default">$enclosure </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }else{<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$field</span><span class="keyword">[</span><span class="default">$ch</span><span class="keyword">];<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$field</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if( </span><span class="default">$i</span><span class="keyword">++ != </span><span class="default">$field_cnt </span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$csvline </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br>
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; return </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$csvline</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; }<br>
}<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="79721"></a>
 <div class="note">
  <strong class="user">boefje at hotmail dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#79721" class="date">10-Dec-2007 12:28</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
A complete example to write your records (rows) to a csv file using PHP4.<br>
<br>
<span class="default">&lt;?php<br>
<br>
</span><span class="keyword">if (!</span><span class="default">function_exists</span><span class="keyword">(</span><span class="string">'fputcsv'</span><span class="keyword">)) <br>
{<br>
&nbsp; <br>
&nbsp; function </span><span class="default">fputcsv</span><span class="keyword">(&amp;</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$fields </span><span class="keyword">= array(), </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">';'</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="string">'"'</span><span class="keyword">) <br>
&nbsp; {<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">= </span><span class="string">''</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$escape_char </span><span class="keyword">= </span><span class="string">'\\'</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; foreach (</span><span class="default">$fields </span><span class="keyword">as </span><span class="default">$value</span><span class="keyword">) <br>
&nbsp;&nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp;&nbsp; if (</span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$delimiter</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$enclosure</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\n"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\r"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\t"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">' '</span><span class="keyword">) !== </span><span class="default">false</span><span class="keyword">) <br>
&nbsp;&nbsp; &nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$len </span><span class="keyword">= </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; for (</span><span class="default">$i</span><span class="keyword">=</span><span class="default">0</span><span class="keyword">;</span><span class="default">$i</span><span class="keyword">&lt;</span><span class="default">$len</span><span class="keyword">;</span><span class="default">$i</span><span class="keyword">++) <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if (</span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">] == </span><span class="default">$escape_char</span><span class="keyword">) <br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">1</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; else if (!</span><span class="default">$escaped </span><span class="keyword">&amp;&amp; </span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">] == </span><span class="default">$enclosure</span><span class="keyword">) <br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; else <br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">];<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$str2</span><span class="keyword">.</span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; } <br>
&nbsp;&nbsp; &nbsp;&nbsp; else <br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$value</span><span class="keyword">.</span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">= </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">,</span><span class="default">0</span><span class="keyword">,-</span><span class="default">1</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; return </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$str</span><span class="keyword">);<br>
&nbsp; }<br>
<br>
}<br>
<br>
function </span><span class="default">WriteCsv</span><span class="keyword">(</span><span class="default">$fileName</span><span class="keyword">, </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">';'</span><span class="keyword">, </span><span class="default">$records</span><span class="keyword">)<br>
{<br>
<br>
&nbsp; </span><span class="default">$result </span><span class="keyword">= array();<br>
&nbsp; foreach(</span><span class="default">$records </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$value</span><span class="keyword">)<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$results</span><span class="keyword">[] = </span><span class="default">implode</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">, </span><span class="default">$value</span><span class="keyword">);<br>
&nbsp; </span><span class="default">$fp </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="default">$fileName</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
&nbsp; foreach (</span><span class="default">$results </span><span class="keyword">as </span><span class="default">$result</span><span class="keyword">) <br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">split</span><span class="keyword">(</span><span class="default">$delimiter</span><span class="keyword">, </span><span class="default">$result</span><span class="keyword">));<br>
&nbsp; </span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">);<br>
}<br>
<br>
</span><span class="comment"># =================== test ====================<br>
<br>
</span><span class="default">define</span><span class="keyword">(</span><span class="string">'CSV_SEPERATOR'</span><span class="keyword">,</span><span class="string">';'</span><span class="keyword">);<br>
</span><span class="default">define</span><span class="keyword">(</span><span class="string">'CSV_PATH'</span><span class="keyword">,</span><span class="string">'\\'</span><span class="keyword">);<br>
</span><span class="default">define</span><span class="keyword">(</span><span class="string">'CSV_FILENAME'</span><span class="keyword">,</span><span class="string">'results.csv'</span><span class="keyword">);<br>
<br>
</span><span class="default">$records </span><span class="keyword">= array (array(</span><span class="string">'aaa'</span><span class="keyword">,</span><span class="string">'bbb'</span><span class="keyword">,</span><span class="string">'ccc'</span><span class="keyword">,</span><span class="string">'dddd'</span><span class="keyword">), <br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; array(</span><span class="string">'123'</span><span class="keyword">,</span><span class="string">'456'</span><span class="keyword">,</span><span class="string">'789'</span><span class="keyword">),<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; array(</span><span class="string">'"test1"'</span><span class="keyword">, </span><span class="string">'"test2"'</span><span class="keyword">, </span><span class="string">'"test3"'</span><span class="keyword">)<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; );<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; <br>
</span><span class="default">$fileName </span><span class="keyword">= </span><span class="default">$_SERVER</span><span class="keyword">[</span><span class="string">'DOCUMENT_ROOT'</span><span class="keyword">] . </span><span class="default">CSV_PATH </span><span class="keyword">. </span><span class="default">CSV_FILENAME</span><span class="keyword">;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <br>
</span><span class="default">WriteCsv </span><span class="keyword">(</span><span class="default">$fileName</span><span class="keyword">,</span><span class="string">';'</span><span class="keyword">,</span><span class="default">$records</span><span class="keyword">);&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; <br>
<br>
echo </span><span class="string">'&lt;a href="' </span><span class="keyword">. </span><span class="default">CSV_PATH </span><span class="keyword">. </span><span class="default">CSV_FILENAME </span><span class="keyword">. </span><span class="string">'" target="_blanc"&gt;CSV File&lt;/a&gt;'</span><span class="keyword">;<br>
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="77866"></a>
 <div class="note">
  <strong class="user">ifunk</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#77866" class="date">17-Sep-2007 01:04</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
I converted this from the PHP source code. This replicates PHP5 functionality exactly, whereas the other examples here do not.<br>
<br>
<span class="default">&lt;?php<br>
<br>
</span><span class="keyword">if (!</span><span class="default">function_exists</span><span class="keyword">(</span><span class="string">'fputcsv'</span><span class="keyword">)) {<br>
&nbsp; <br>
&nbsp; function </span><span class="default">fputcsv</span><span class="keyword">(&amp;</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$fields </span><span class="keyword">= array(), </span><span class="default">$delimiter </span><span class="keyword">= </span><span class="string">','</span><span class="keyword">, </span><span class="default">$enclosure </span><span class="keyword">= </span><span class="string">'"'</span><span class="keyword">) {<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">= </span><span class="string">''</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$escape_char </span><span class="keyword">= </span><span class="string">'\\'</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; foreach (</span><span class="default">$fields </span><span class="keyword">as </span><span class="default">$value</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp;&nbsp; if (</span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$delimiter</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="default">$enclosure</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\n"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\r"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">"\t"</span><span class="keyword">) !== </span><span class="default">false </span><span class="keyword">||<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">strpos</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">, </span><span class="string">' '</span><span class="keyword">) !== </span><span class="default">false</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$len </span><span class="keyword">= </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$value</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; for (</span><span class="default">$i</span><span class="keyword">=</span><span class="default">0</span><span class="keyword">;</span><span class="default">$i</span><span class="keyword">&lt;</span><span class="default">$len</span><span class="keyword">;</span><span class="default">$i</span><span class="keyword">++) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; if (</span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">] == </span><span class="default">$escape_char</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">1</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } else if (!</span><span class="default">$escaped </span><span class="keyword">&amp;&amp; </span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">] == </span><span class="default">$enclosure</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$escaped </span><span class="keyword">= </span><span class="default">0</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$value</span><span class="keyword">[</span><span class="default">$i</span><span class="keyword">];<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str2 </span><span class="keyword">.= </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$str2</span><span class="keyword">.</span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$value</span><span class="keyword">.</span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">= </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">,</span><span class="default">0</span><span class="keyword">,-</span><span class="default">1</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; return </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$str</span><span class="keyword">);<br>
&nbsp; }<br>
&nbsp; <br>
}<br>
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="77013"></a>
 <div class="note">
  <strong class="user">alexxed thething gmail thething com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#77013" class="date">10-Aug-2007 07:28</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
A event simpler way:
<br>

<br>
<span class="default">&lt;?php
<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$hFile</span><span class="keyword">, </span><span class="default">$aRow</span><span class="keyword">, </span><span class="default">$sSeparator</span><span class="keyword">=</span><span class="string">','</span><span class="keyword">, </span><span class="default">$sEnclosure</span><span class="keyword">=</span><span class="string">'"'</span><span class="keyword">)
<br>
&nbsp;&nbsp;&nbsp; {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; foreach (</span><span class="default">$aRow </span><span class="keyword">as </span><span class="default">$iIdx</span><span class="keyword">=&gt;</span><span class="default">$sCell</span><span class="keyword">)
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$aRow</span><span class="keyword">[</span><span class="default">$iIdx</span><span class="keyword">] = </span><span class="default">str_replace</span><span class="keyword">(</span><span class="default">$sEnclosure</span><span class="keyword">, </span><span class="default">$sEnclosure</span><span class="keyword">.</span><span class="default">$sEnclosure</span><span class="keyword">, </span><span class="default">$sCell</span><span class="keyword">);
<br>

<br>
&nbsp;&nbsp; &nbsp; &nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$hFile</span><span class="keyword">, </span><span class="default">join</span><span class="keyword">(</span><span class="default">$aRow</span><span class="keyword">, </span><span class="default">$sSeparator</span><span class="keyword">).</span><span class="string">"\n"</span><span class="keyword">);
<br>
&nbsp;&nbsp;&nbsp; }
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="76895"></a>
 <div class="note">
  <strong class="user">Jonathon Hibbard at phpingenuity.com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#76895" class="date">04-Aug-2007 03:23</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
This function is a replacement for PHP 4.&nbsp; It basically takes an array you pass it, and creates a delimited string.&nbsp; If you want ot use the key as the field name, you can tell the second paramater to use the key.&nbsp; The last is the delimiter you want each value to be seperated by.&nbsp; Should be pretty straight forward.<br>
<br>
<span class="default">&lt;?php<br>
</span><span class="keyword">function </span><span class="default">generate_csv_data</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">,</span><span class="default">$use_key</span><span class="keyword">=</span><span class="default">false</span><span class="keyword">,</span><span class="default">$delm</span><span class="keyword">=</span><span class="string">','</span><span class="keyword">) {<br>
&nbsp; </span><span class="default">$output </span><span class="keyword">= </span><span class="default">NULL</span><span class="keyword">;<br>
&nbsp; if(</span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">)) {<br>
&nbsp;&nbsp;&nbsp; if(</span><span class="default">$use_key </span><span class="keyword">== </span><span class="default">false</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp;&nbsp; if(isset(</span><span class="default">$data</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">]) &amp;&amp; </span><span class="default">is_array</span><span class="keyword">(</span><span class="default">$data</span><span class="keyword">[</span><span class="default">0</span><span class="keyword">])) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; foreach(</span><span class="default">$data </span><span class="keyword">as </span><span class="default">$key</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">.= </span><span class="default">implode</span><span class="keyword">(</span><span class="default">$delm</span><span class="keyword">,</span><span class="default">$key</span><span class="keyword">);<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp; &nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">.= </span><span class="default">implode</span><span class="keyword">(</span><span class="string">"$delm"</span><span class="keyword">, </span><span class="default">$data</span><span class="keyword">).</span><span class="string">"\n"</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; } else {<br>
&nbsp;&nbsp; &nbsp;&nbsp; foreach(</span><span class="default">$data </span><span class="keyword">as </span><span class="default">$key </span><span class="keyword">=&gt; </span><span class="default">$value</span><span class="keyword">) {<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">.= </span><span class="string">"$key{$delm}$value\n"</span><span class="keyword">;<br>
&nbsp;&nbsp; &nbsp;&nbsp; }<br>
&nbsp;&nbsp;&nbsp; }<br>
&nbsp; } else {<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$output </span><span class="keyword">= </span><span class="default">$data</span><span class="keyword">;<br>
&nbsp; }<br>
&nbsp; if(empty(</span><span class="default">$output</span><span class="keyword">)) {<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">trigger_error</span><span class="keyword">(</span><span class="string">'OUTPUT WAS EMPTY!'</span><span class="keyword">, </span><span class="default">E_USER_ERROR</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; return </span><span class="default">false</span><span class="keyword">;<br>
&nbsp; }<br>
&nbsp; return </span><span class="default">$output</span><span class="keyword">;<br>
}<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="75998"></a>
 <div class="note">
  <strong class="user">enzo dot d dot a at example dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#75998" class="date">26-Jun-2007 10:08</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Compact fputcsv function(), for Php version &gt;= 4.0.5 and &lt; 5.1.
<br>
Not a "good programming practice", but if you need save bytes ...
<br>

<br>
<span class="default">&lt;?php
<br>
</span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, </span><span class="default">$arr</span><span class="keyword">, </span><span class="default">$del</span><span class="keyword">=</span><span class="string">","</span><span class="keyword">, </span><span class="default">$enc</span><span class="keyword">=</span><span class="string">"\""</span><span class="keyword">) {
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$fp</span><span class="keyword">, (</span><span class="default">count</span><span class="keyword">(</span><span class="default">$arr</span><span class="keyword">)) ? </span><span class="default">$enc </span><span class="keyword">. </span><span class="default">implode</span><span class="keyword">(</span><span class="string">"{$enc}{$del}{$enc}"</span><span class="keyword">, </span><span class="default">str_replace</span><span class="keyword">(</span><span class="string">"\""</span><span class="keyword">, </span><span class="string">"\"\""</span><span class="keyword">, </span><span class="default">$arr</span><span class="keyword">)) . </span><span class="default">$enc </span><span class="keyword">. </span><span class="string">"\n" </span><span class="keyword">: </span><span class="string">"\n"</span><span class="keyword">);
<br>
}
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="74118"></a>
 <div class="note">
  <strong class="user">bl at mindbench dot nl</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#74118" class="date">26-Mar-2007 08:55</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
If you need to save the output to a variable (e.g. for use within a framework) you can write to a temporary memory-wrapper and retrieve it's contents:<br>
<br>
<span class="default">&lt;?php<br>
</span><span class="comment">// output up to 5MB is kept in memory, if it becomes bigger it will automatically be written to a temporary file<br>
</span><span class="default">$csv </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://temp/maxmemory:'</span><span class="keyword">. (</span><span class="default">5</span><span class="keyword">*</span><span class="default">1024</span><span class="keyword">*</span><span class="default">1024</span><span class="keyword">), </span><span class="string">'r+'</span><span class="keyword">);<br>
<br>
</span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$csv</span><span class="keyword">, array(</span><span class="string">'blah'</span><span class="keyword">,</span><span class="string">'blah'</span><span class="keyword">));<br>
<br>
</span><span class="default">rewind</span><span class="keyword">(</span><span class="default">$csv</span><span class="keyword">);<br>
<br>
</span><span class="comment">// put it all in a variable<br>
</span><span class="default">$output </span><span class="keyword">= </span><span class="default">stream_get_contents</span><span class="keyword">(</span><span class="default">$csv</span><span class="keyword">);<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="72428"></a>
 <div class="note">
  <strong class="user">MagicalTux at ooKoo dot org</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#72428" class="date">18-Jan-2007 02:08</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
If you need to send a CSV file directly to the browser, without writing in an external file, you can open the output and use fputcsv on it..<br>
<br>
<span class="default">&lt;?php<br>
$out </span><span class="keyword">= </span><span class="default">fopen</span><span class="keyword">(</span><span class="string">'php://output'</span><span class="keyword">, </span><span class="string">'w'</span><span class="keyword">);<br>
</span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$out</span><span class="keyword">, array(</span><span class="string">'this'</span><span class="keyword">,</span><span class="string">'is some'</span><span class="keyword">, </span><span class="string">'csv "stuff", you know.'</span><span class="keyword">));<br>
</span><span class="default">fclose</span><span class="keyword">(</span><span class="default">$out</span><span class="keyword">);<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="57164"></a>
 <div class="note">
  <strong class="user">heather at heathercash dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#57164" class="date">25-Sep-2005 11:18</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Here is an adaptation to boonerunner's function for fputcsv.
<br>
It uses a 2-dimensional array.
<br>
Each sub-array is a line in the csv file which then ends up being seperated by commas.
<br>

<br>
<span class="default">&lt;?php
<br>
</span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$filePointer</span><span class="keyword">,</span><span class="default">$dataArray</span><span class="keyword">,</span><span class="default">$delimiter</span><span class="keyword">=</span><span class="string">","</span><span class="keyword">,</span><span class="default">$enclosure</span><span class="keyword">=</span><span class="string">"\""</span><span class="keyword">){
<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Write a line to a file
<br>
&nbsp;&nbsp;&nbsp; // $filePointer = the file resource to write to
<br>
&nbsp;&nbsp;&nbsp; // $dataArray = the data to write out
<br>
&nbsp;&nbsp;&nbsp; // $delimeter = the field separator
<br>
&nbsp;&nbsp; &nbsp; 
<br>
&nbsp;&nbsp;&nbsp; // Build the string
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$string </span><span class="keyword">= </span><span class="string">""</span><span class="keyword">;
<br>
&nbsp; 
<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// for each array element, which represents a line in the csv file...
<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">foreach(</span><span class="default">$dataArray </span><span class="keyword">as </span><span class="default">$line</span><span class="keyword">){
<br>

<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// No leading delimiter
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$writeDelimiter </span><span class="keyword">= </span><span class="default">FALSE</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; 
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; foreach(</span><span class="default">$line </span><span class="keyword">as </span><span class="default">$dataElement</span><span class="keyword">){ 
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Replaces a double quote with two double quotes
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$dataElement</span><span class="keyword">=</span><span class="default">str_replace</span><span class="keyword">(</span><span class="string">"\""</span><span class="keyword">, </span><span class="string">"\"\""</span><span class="keyword">, </span><span class="default">$dataElement</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Adds a delimiter before each field (except the first)
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="keyword">if(</span><span class="default">$writeDelimiter</span><span class="keyword">) </span><span class="default">$string </span><span class="keyword">.= </span><span class="default">$delimiter</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Encloses each field with $enclosure and adds it to the string
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$string </span><span class="keyword">.= </span><span class="default">$enclosure </span><span class="keyword">. </span><span class="default">$dataElement </span><span class="keyword">. </span><span class="default">$enclosure</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; 
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Delimiters are used every time except the first.
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$writeDelimiter </span><span class="keyword">= </span><span class="default">TRUE</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="comment">// Append new line
<br>
&nbsp;&nbsp; &nbsp; &nbsp;&nbsp; </span><span class="default">$string </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;
<br>

<br>
&nbsp;&nbsp;&nbsp; } </span><span class="comment">// end foreach($dataArray as $line)
<br>

<br>
&nbsp;&nbsp;&nbsp; // Write the string to the file
<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$filePointer</span><span class="keyword">,</span><span class="default">$string</span><span class="keyword">);
<br>
}
<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="56827"></a>
 <div class="note">
  <strong class="user">boonerunner at hotmail dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#56827" class="date">16-Sep-2005 02:47</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
Here is an adaption of the above code that adds support for double quotes inside a field. (One double quote is replaced with a pair of double quotes per the CSV format).<br>
<br>
<span class="default">&lt;?php<br>
&nbsp;</span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$filePointer</span><span class="keyword">,</span><span class="default">$dataArray</span><span class="keyword">,</span><span class="default">$delimiter</span><span class="keyword">,</span><span class="default">$enclosure</span><span class="keyword">)<br>
&nbsp; {<br>
&nbsp; </span><span class="comment">// Write a line to a file<br>
&nbsp; // $filePointer = the file resource to write to<br>
&nbsp; // $dataArray = the data to write out<br>
&nbsp; // $delimeter = the field separator<br>
&nbsp; <br>
&nbsp; // Build the string<br>
&nbsp; </span><span class="default">$string </span><span class="keyword">= </span><span class="string">""</span><span class="keyword">;<br>
&nbsp; <br>
&nbsp; </span><span class="comment">// No leading delimiter<br>
&nbsp; </span><span class="default">$writeDelimiter </span><span class="keyword">= </span><span class="default">FALSE</span><span class="keyword">;<br>
&nbsp; foreach(</span><span class="default">$dataArray </span><span class="keyword">as </span><span class="default">$dataElement</span><span class="keyword">)<br>
&nbsp;&nbsp; {<br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Replaces a double quote with two double quotes<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$dataElement</span><span class="keyword">=</span><span class="default">str_replace</span><span class="keyword">(</span><span class="string">"\""</span><span class="keyword">, </span><span class="string">"\"\""</span><span class="keyword">, </span><span class="default">$dataElement</span><span class="keyword">);<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Adds a delimiter before each field (except the first)<br>
&nbsp;&nbsp;&nbsp; </span><span class="keyword">if(</span><span class="default">$writeDelimiter</span><span class="keyword">) </span><span class="default">$string </span><span class="keyword">.= </span><span class="default">$delimiter</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Encloses each field with $enclosure and adds it to the string<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$string </span><span class="keyword">.= </span><span class="default">$enclosure </span><span class="keyword">. </span><span class="default">$dataElement </span><span class="keyword">. </span><span class="default">$enclosure</span><span class="keyword">;<br>
&nbsp;&nbsp;&nbsp; <br>
&nbsp;&nbsp;&nbsp; </span><span class="comment">// Delimiters are used every time except the first.<br>
&nbsp;&nbsp;&nbsp; </span><span class="default">$writeDelimiter </span><span class="keyword">= </span><span class="default">TRUE</span><span class="keyword">;<br>
&nbsp;&nbsp; } </span><span class="comment">// end foreach($dataArray as $dataElement)<br>
&nbsp; <br>
&nbsp; // Append new line<br>
&nbsp; </span><span class="default">$string </span><span class="keyword">.= </span><span class="string">"\n"</span><span class="keyword">;<br>
&nbsp; <br>
&nbsp; </span><span class="comment">// Write the string to the file<br>
&nbsp; </span><span class="default">fwrite</span><span class="keyword">(</span><span class="default">$filePointer</span><span class="keyword">,</span><span class="default">$string</span><span class="keyword">);<br>
&nbsp; }<br>
</span><span class="default">?&gt;</span>
</span>
</code></div>
  </div>
 </div>
 <a name="49249"></a>
 <div class="note">
  <strong class="user">twebb at boisecenter dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#49249" class="date">21-Jan-2005 01:54</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
What about cells that span multiple lines?&nbsp; This function allows for cells to contain newlines:
<br>

<br>
<span class="default">&lt;?php
<br>
</span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$row</span><span class="keyword">, </span><span class="default">$fd</span><span class="keyword">=</span><span class="string">','</span><span class="keyword">, </span><span class="default">$quot</span><span class="keyword">=</span><span class="string">'"'</span><span class="keyword">)
<br>
{
<br>
&nbsp;&nbsp; </span><span class="default">$str</span><span class="keyword">=</span><span class="string">''</span><span class="keyword">;
<br>
&nbsp;&nbsp; foreach (</span><span class="default">$row </span><span class="keyword">as </span><span class="default">$cell</span><span class="keyword">) 
<br>
&nbsp;&nbsp; {
<br>
&nbsp;&nbsp; &nbsp;&nbsp; </span><span class="default">$cell </span><span class="keyword">= </span><span class="default">str_replace</span><span class="keyword">(</span><span class="default">$quot</span><span class="keyword">, </span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$quot</span><span class="keyword">, </span><span class="default">$cell</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; 
<br>
&nbsp;&nbsp; &nbsp;&nbsp; if (</span><span class="default">strchr</span><span class="keyword">(</span><span class="default">$cell</span><span class="keyword">, </span><span class="default">$fd</span><span class="keyword">) !== </span><span class="default">FALSE </span><span class="keyword">|| </span><span class="default">strchr</span><span class="keyword">(</span><span class="default">$cell</span><span class="keyword">, </span><span class="default">$quot</span><span class="keyword">) !== </span><span class="default">FALSE </span><span class="keyword">|| </span><span class="default">strchr</span><span class="keyword">(</span><span class="default">$cell</span><span class="keyword">, </span><span class="string">"\n"</span><span class="keyword">) !== </span><span class="default">FALSE</span><span class="keyword">) 
<br>
&nbsp;&nbsp; &nbsp;&nbsp; {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$cell</span><span class="keyword">.</span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$fd</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp;&nbsp; } 
<br>
&nbsp;&nbsp; &nbsp;&nbsp; else 
<br>
&nbsp;&nbsp; &nbsp;&nbsp; {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$str </span><span class="keyword">.= </span><span class="default">$cell</span><span class="keyword">.</span><span class="default">$fd</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp;&nbsp; }
<br>
&nbsp;&nbsp; }
<br>

<br>
&nbsp;&nbsp; </span><span class="default">fputs</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, -</span><span class="default">1</span><span class="keyword">).</span><span class="string">"\n"</span><span class="keyword">);
<br>

<br>
&nbsp;&nbsp; return </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">);
<br>
}
<br>
</span><span class="default">?&gt;
<br>
</span>
<br>
I found this reference on the web: 
<br>
<a href="http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm" rel="nofollow" target="_blank">http://www.creativyst.com/Doc/Articles/CSV/CSV01.htm</a></span>
</code></div>
  </div>
 </div>
 <a name="47606"></a>
 <div class="note">
  <strong class="user">drew at zitnay dot com</strong>
  <a href="http://www.php.net/manual/en/function.fputcsv.php#47606" class="date">22-Nov-2004 05:42</a>
  <div class="text">
<div class="phpcode"><code><span class="html">
[EDIT BY danbrown AT php DOT net: This is a revised function with a few bugfixes and improvements done by this author.&nbsp; The original function example was written by arthur AT mclean DOT ws, and rewritten between by arthur AT korn DOT ch.]
<br>

<br>
- when calling str_replace(), you must assign $cell the return value or nothing gets saved
<br>

<br>
- when using strchr(), you should explicitly check !== FALSE, or it'll treat a return value of 0 (found the character at string position 0) as FALSE
<br>

<br>
- Excel seems to quote not only fields containing commas, but fields containing quotes as well, so I've added another strchr() for quotes; I'm not saying Microsoft knows the correct way for sure, but it seems reasonable to me
<br>

<br>
- the original function put a space after each comma; that might be legal, I don't know, but I've never seen it (and I don't think it is, because then how would you indicate you wanted a field to start with a space other than by quoting it?)
<br>

<br>
- the original function didn't correctly return the length of the data outputted
<br>

<br>
Here's the function, fixed up a bit:
<br>

<br>
<span class="default">&lt;?php
<br>
</span><span class="keyword">function </span><span class="default">fputcsv</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">$row</span><span class="keyword">, </span><span class="default">$fd</span><span class="keyword">=</span><span class="string">','</span><span class="keyword">, </span><span class="default">$quot</span><span class="keyword">=</span><span class="string">'"'</span><span class="keyword">)
<br>
{
<br>
&nbsp;&nbsp; </span><span class="default">$str</span><span class="keyword">=</span><span class="string">''</span><span class="keyword">;
<br>
&nbsp;&nbsp; foreach (</span><span class="default">$row </span><span class="keyword">as </span><span class="default">$cell</span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; </span><span class="default">$cell</span><span class="keyword">=</span><span class="default">str_replace</span><span class="keyword">(Array(</span><span class="default">$quot</span><span class="keyword">,&nbsp; &nbsp; &nbsp; &nbsp; </span><span class="string">"\n"</span><span class="keyword">),
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Array(</span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$quot</span><span class="keyword">,&nbsp; </span><span class="string">''</span><span class="keyword">),
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$cell</span><span class="keyword">);
<br>
&nbsp;&nbsp; &nbsp; &nbsp; if (</span><span class="default">strchr</span><span class="keyword">(</span><span class="default">$cell</span><span class="keyword">, </span><span class="default">$fd</span><span class="keyword">)!==</span><span class="default">FALSE </span><span class="keyword">|| </span><span class="default">strchr</span><span class="keyword">(</span><span class="default">$cell</span><span class="keyword">, </span><span class="default">$quot</span><span class="keyword">)!==</span><span class="default">FALSE</span><span class="keyword">) {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$str</span><span class="keyword">.=</span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$cell</span><span class="keyword">.</span><span class="default">$quot</span><span class="keyword">.</span><span class="default">$fd</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; } else {
<br>
&nbsp;&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; </span><span class="default">$str</span><span class="keyword">.=</span><span class="default">$cell</span><span class="keyword">.</span><span class="default">$fd</span><span class="keyword">;
<br>
&nbsp;&nbsp; &nbsp; &nbsp; }
<br>
&nbsp;&nbsp; }
<br>

<br>
&nbsp;&nbsp; </span><span class="default">fputs</span><span class="keyword">(</span><span class="default">$handle</span><span class="keyword">, </span><span class="default">substr</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">, </span><span class="default">0</span><span class="keyword">, -</span><span class="default">1</span><span class="keyword">).</span><span class="string">"\n"</span><span class="keyword">);
<br>

<br>
&nbsp;&nbsp; return </span><span class="default">strlen</span><span class="keyword">(</span><span class="default">$str</span><span class="keyword">);
<br>
}
<br>
</span><span class="default">?&gt;
<br>
</span>
<br>
Drew</span>
</code></div>
  </div>
 </div></div>

 <div class="foot"><a href="http://www.php.net/manual/add-note.php?sect=function.fputcsv&redirect=http://www.php.net/manual/en/function.fputcsv.php"><img src="./PHP  fputcsv - Manual_files/notes-add.gif" alt="add a note" width="13" height="13" class="middle"></a> <small><a href="http://www.php.net/manual/add-note.php?sect=function.fputcsv&redirect=http://www.php.net/manual/en/function.fputcsv.php">add a note</a></small></div>
</div><br>
 </div>
 <div class="cleaner">&nbsp;</div>
</div>

<div id="footnav">
   <a href="http://www.php.net/source.php?url=/manual/en/function.fputcsv.php">show source</a> |
 <a href="http://www.php.net/credits.php">credits</a> |
 <a href="http://www.php.net/stats/">stats</a> |
 <a href="http://www.php.net/sitemap.php">sitemap</a> |
 <a href="http://www.php.net/contact.php">contact</a> |
 <a href="http://www.php.net/contact.php#ads">advertising</a> |
 <a href="http://www.php.net/mirrors.php">mirror sites</a>
</div>

<div id="pagefooter">
 <div id="copyright">
  <a href="http://www.php.net/copyright.php">Copyright © 2001-2011 The PHP Group</a><br>
  All rights reserved.
 </div>

 <div id="thismirror">
  <a href="http://www.php.net/mirror.php">This mirror</a> generously provided by:
  <a href="http://developer.yahoo.com/">Yahoo! Inc.</a><br>
  Last updated: Sat Dec 24 14:21:09 2011 UTC
 </div>
</div>
<!--[if IE 6]>
<script type="text/javascript">
    /*Load jQuery if not already loaded*/ if(typeof jQuery == 'undefined'){ document.write("<script type=\"text/javascript\"   src=\"http://ajax.googleapis.com/ajax/libs/jquery/1.3.2/jquery.min.js\"></"+"script>"); var __noconflict = true; }
    var IE6UPDATE_OPTIONS = {
        icons_path: "/ie6update/images/"
    }
</script>
<script type="text/javascript" src="/ie6update/ie6update.js"></script>
<![endif]-->

</body></html>